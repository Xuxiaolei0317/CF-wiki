{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u67e5\u9605\u624b\u518c \u666e\u901a \u00b6 \u6587\u6863\u5bfc\u822a \u7f16\u8f91\u6280\u5de7 \u5feb\u6377\u952e \u6570\u5b66\u624b\u518c \u8ba1\u7b97\u673a\u624b\u518c \u670d\u52a1\u5668\u624b\u518c \u5199\u4f5c\u6280\u5de7 \u7f16\u7a0b \u00b6 Python Python\u753b\u56fe Pytorch Shell \u6280\u5de7 \u00b6 Docker LaTeX","title":"Home"},{"location":"#_1","text":"\u6587\u6863\u5bfc\u822a \u7f16\u8f91\u6280\u5de7 \u5feb\u6377\u952e \u6570\u5b66\u624b\u518c \u8ba1\u7b97\u673a\u624b\u518c \u670d\u52a1\u5668\u624b\u518c \u5199\u4f5c\u6280\u5de7","title":"\u666e\u901a"},{"location":"#_2","text":"Python Python\u753b\u56fe Pytorch Shell","title":"\u7f16\u7a0b"},{"location":"#_3","text":"Docker LaTeX","title":"\u6280\u5de7"},{"location":"about/","text":"\u5173\u4e8e\u9875\u9762","title":"About"},{"location":"%E5%AF%BC%E8%88%AA/Docker/","text":"\u76f8\u5173\u5bfc\u822a \u00b6 Ubuntu\u5b89\u88c5docker\u548cnvidia-docker\u4ee5\u53cacaffe \u57fa\u7840\u64cd\u4f5c \u00b6 \u5bb9\u5668\u540e\u53f0\u8fd0\u884c\u9000\u51fa \u00b6 Ctrl + p + q \u540e\u53f0\u5bb9\u5668\u91cd\u65b0\u8fdb\u5165\u547d\u4ee4 \u00b6 docker exec -it [container id] /bin/bash \u6682\u505c\u6b63\u5728\u8fd0\u884c\u7684container \u00b6 docker stop [CONTAINER ID] \u5220\u9664container \u00b6 container\u7684STATUS\u975e UP \u72b6\u6001\u65f6\u53ef\u4ee5\u5220\u9664\uff0c\u5426\u5219\u9700\u8981\u5148\u6682\u505c\u3002 docker ps -a # \u67e5\u770b\u6240\u6709\u7684container docker rm [CONTAINER ID] \u4e3b\u673a\u548c\u5bb9\u5668\u4f20\u8f93\u6587\u4ef6 \u00b6 # \u4e3b\u673a\u4f20\u5230\u5bb9\u5668 docker cp [ host_path ] [ containerID ] : [ container_path ] # \u5bb9\u5668\u5230\u4e3b\u673a docker cp [ containerID ] : [ container_path ] [ host_path ] \u914d\u7f6e\u670d\u52a1\u5668\u4e0aDocker\u7684tensorflow-gpu \u00b6 \u4e0b\u8f7dtensorflow-gpu\u7684image \u524d\u5f80https://hub.docker.com/\u4e0a\u641c\u7d22\u60f3\u8981\u7684image\u7248\u672c\u3002\uff08\u6211\u8fd9\u91cc\u9009\u62e9\u7684\u662f TAG=1.15.0-gpu-py3 \u7684\u7248\u672c\uff09 docker pull tensorflow/tensorflow:1.15.0-gpu-py3 \u521b\u5efaTensorflow-gpu\u7684container sudo nvidia-docker run -p 5592:5592 -p 5593:5593 -p 8022:22 --name=\"tf\" -v ~/tf:/home/xuyc/workspace/tf -it tensorflow/tensorflow:1.15.0-gpu-py3 /bin/bash \u82e5\u51fa\u73b0\u4e86 invalid volume specification \u9519\u8bef\uff0c\u53ef\u53c2\u8003\u4e0b\u9762\u7684\u95ee\u9898\u89e3\u7b54\u3002 \u914d\u7f6eSSH\u670d\u52a1 apt update apt install -y openssh-server mkdir /var/run/sshd echo 'root:\u5bc6\u7801' | chpasswd sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd echo \"export VISIBLE=now\" >> /etc/profile echo \"PermitRootLogin yes\" >> /etc/ssh/sshd_config #\u989d\u5916\u6dfb\u52a0\u7684 \u91cd\u542fSSH\u6fc0\u6d3b\u914d\u7f6e\uff1a service ssh restart \u5728\u670d\u52a1\u5668\uff08\u5bbf\u4e3b\u673a\uff09\u4e0a\uff08\u4e0d\u662f\u670d\u52a1\u5668\u7684docker\u91cc\uff09\u6d4b\u8bd5\u521a\u521a\u65b0\u5efadocker\u5bb9\u5668\u4e2d\u54ea\u4e2a\u7aef\u53e3\u8f6c\u53d1\u5230\u4e86\u670d\u52a1\u5668\u768422\u7aef\u53e3\uff1a sudo docker port [ your_container_name ] 22 # \u5982\u679c\u524d\u9762\u7684\u914d\u7f6e\u751f\u6548\u4e86\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u8f93\u51fa # 0.0.0.0:8022 sudo nvidia-docker run -p 5592:5592 -p 5593:5593 -p 8022:22 --name=\"tf\" -v ~/tf:~/Desktop/Projects/MyResearch/tf -it tensorflow/tensorflow:1.15.0-gpu-py3 /bin/bash \u4fdd\u5b58\u955c\u50cf docker commit -m \"xxx\" [CONTAINER ID] \u6dfb\u52a0REPOSITORY\u548cTAG\u4fe1\u606f docker tag [IMAGE ID] reposistory:tag docker tag [IMAGE ID] tensorflow:1.15 \u67e5\u770b\u5bb9\u5668\u6302\u8f7d\u6620\u5c04\u76ee\u5f55 docker inspect [CONTAINER ID] | grep Mounts -A 20 \u4e3b\u673a\u548c\u5bb9\u5668\u62f7\u8d1d\u6587\u4ef6\uff08\u5728\u4e3b\u673a\u4e2d\u64cd\u4f5c\uff09 \u5bb9\u5668->\u4e3b\u673a\uff1a docker cp [CONTAINER NAME]:[path] [path] \u4e3b\u673a->\u5bb9\u5668\uff1a docker cp [path] [CONTAINER NAME]:[path] \u8fd9\u91cc\u62a5\u4e86\u4e00\u4e2a\u9519\uff0c\u4e0d\u53ef\u4ee5\u4f7f\u7528 docker: Error response from daemon: invalid volume specification: '/home/xuyc/tf:~/Desktop/Projects/MyResearch/tf': invalid mount config for type \"bind\": invalid mount path: '~/Desktop/Projects/MyResearch/tf' mount path must be absolute. \u53c2\u8003 \u00b6 PyCharm+Docker\uff1a\u6253\u9020\u6700\u8212\u9002\u7684\u6df1\u5ea6\u5b66\u4e60\u70bc\u4e39\u7089 - \u5218\u9707\u7684\u6587\u7ae0 - \u77e5\u4e4e","title":"Docker\u624b\u518c"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#_1","text":"Ubuntu\u5b89\u88c5docker\u548cnvidia-docker\u4ee5\u53cacaffe","title":"\u76f8\u5173\u5bfc\u822a"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#_2","text":"","title":"\u57fa\u7840\u64cd\u4f5c"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#_3","text":"Ctrl + p + q","title":"\u5bb9\u5668\u540e\u53f0\u8fd0\u884c\u9000\u51fa"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#_4","text":"docker exec -it [container id] /bin/bash","title":"\u540e\u53f0\u5bb9\u5668\u91cd\u65b0\u8fdb\u5165\u547d\u4ee4"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#container","text":"docker stop [CONTAINER ID]","title":"\u6682\u505c\u6b63\u5728\u8fd0\u884c\u7684container"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#container_1","text":"container\u7684STATUS\u975e UP \u72b6\u6001\u65f6\u53ef\u4ee5\u5220\u9664\uff0c\u5426\u5219\u9700\u8981\u5148\u6682\u505c\u3002 docker ps -a # \u67e5\u770b\u6240\u6709\u7684container docker rm [CONTAINER ID]","title":"\u5220\u9664container"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#_5","text":"# \u4e3b\u673a\u4f20\u5230\u5bb9\u5668 docker cp [ host_path ] [ containerID ] : [ container_path ] # \u5bb9\u5668\u5230\u4e3b\u673a docker cp [ containerID ] : [ container_path ] [ host_path ]","title":"\u4e3b\u673a\u548c\u5bb9\u5668\u4f20\u8f93\u6587\u4ef6"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#dockertensorflow-gpu","text":"\u4e0b\u8f7dtensorflow-gpu\u7684image \u524d\u5f80https://hub.docker.com/\u4e0a\u641c\u7d22\u60f3\u8981\u7684image\u7248\u672c\u3002\uff08\u6211\u8fd9\u91cc\u9009\u62e9\u7684\u662f TAG=1.15.0-gpu-py3 \u7684\u7248\u672c\uff09 docker pull tensorflow/tensorflow:1.15.0-gpu-py3 \u521b\u5efaTensorflow-gpu\u7684container sudo nvidia-docker run -p 5592:5592 -p 5593:5593 -p 8022:22 --name=\"tf\" -v ~/tf:/home/xuyc/workspace/tf -it tensorflow/tensorflow:1.15.0-gpu-py3 /bin/bash \u82e5\u51fa\u73b0\u4e86 invalid volume specification \u9519\u8bef\uff0c\u53ef\u53c2\u8003\u4e0b\u9762\u7684\u95ee\u9898\u89e3\u7b54\u3002 \u914d\u7f6eSSH\u670d\u52a1 apt update apt install -y openssh-server mkdir /var/run/sshd echo 'root:\u5bc6\u7801' | chpasswd sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd echo \"export VISIBLE=now\" >> /etc/profile echo \"PermitRootLogin yes\" >> /etc/ssh/sshd_config #\u989d\u5916\u6dfb\u52a0\u7684 \u91cd\u542fSSH\u6fc0\u6d3b\u914d\u7f6e\uff1a service ssh restart \u5728\u670d\u52a1\u5668\uff08\u5bbf\u4e3b\u673a\uff09\u4e0a\uff08\u4e0d\u662f\u670d\u52a1\u5668\u7684docker\u91cc\uff09\u6d4b\u8bd5\u521a\u521a\u65b0\u5efadocker\u5bb9\u5668\u4e2d\u54ea\u4e2a\u7aef\u53e3\u8f6c\u53d1\u5230\u4e86\u670d\u52a1\u5668\u768422\u7aef\u53e3\uff1a sudo docker port [ your_container_name ] 22 # \u5982\u679c\u524d\u9762\u7684\u914d\u7f6e\u751f\u6548\u4e86\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u8f93\u51fa # 0.0.0.0:8022 sudo nvidia-docker run -p 5592:5592 -p 5593:5593 -p 8022:22 --name=\"tf\" -v ~/tf:~/Desktop/Projects/MyResearch/tf -it tensorflow/tensorflow:1.15.0-gpu-py3 /bin/bash \u4fdd\u5b58\u955c\u50cf docker commit -m \"xxx\" [CONTAINER ID] \u6dfb\u52a0REPOSITORY\u548cTAG\u4fe1\u606f docker tag [IMAGE ID] reposistory:tag docker tag [IMAGE ID] tensorflow:1.15 \u67e5\u770b\u5bb9\u5668\u6302\u8f7d\u6620\u5c04\u76ee\u5f55 docker inspect [CONTAINER ID] | grep Mounts -A 20 \u4e3b\u673a\u548c\u5bb9\u5668\u62f7\u8d1d\u6587\u4ef6\uff08\u5728\u4e3b\u673a\u4e2d\u64cd\u4f5c\uff09 \u5bb9\u5668->\u4e3b\u673a\uff1a docker cp [CONTAINER NAME]:[path] [path] \u4e3b\u673a->\u5bb9\u5668\uff1a docker cp [path] [CONTAINER NAME]:[path] \u8fd9\u91cc\u62a5\u4e86\u4e00\u4e2a\u9519\uff0c\u4e0d\u53ef\u4ee5\u4f7f\u7528 docker: Error response from daemon: invalid volume specification: '/home/xuyc/tf:~/Desktop/Projects/MyResearch/tf': invalid mount config for type \"bind\": invalid mount path: '~/Desktop/Projects/MyResearch/tf' mount path must be absolute.","title":"\u914d\u7f6e\u670d\u52a1\u5668\u4e0aDocker\u7684tensorflow-gpu"},{"location":"%E5%AF%BC%E8%88%AA/Docker/#_6","text":"PyCharm+Docker\uff1a\u6253\u9020\u6700\u8212\u9002\u7684\u6df1\u5ea6\u5b66\u4e60\u70bc\u4e39\u7089 - \u5218\u9707\u7684\u6587\u7ae0 - \u77e5\u4e4e","title":"\u53c2\u8003"},{"location":"%E5%AF%BC%E8%88%AA/latex/","text":"\u6ce8\u610f\u4e8b\u9879\uff1aTeX\u7cfb\u7684\u6587\u6863\u4e0d\u5efa\u8bae\u76f4\u63a5\u5728\u6587\u6863\u4e2d\u4f7f\u7528 Tab(\\t) \u4f5c\u4e3a\u7f29\u8fdb\uff0c\u5efa\u8bae\u4f7f\u7528\u4e24\u4e2a\u7a7a\u683c\u4f5c\u4e3a\u7f29\u8fdb\u3002","title":"Latex"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/","text":"Markdown\u6280\u5de7 \u00b6 Markdown\u9002\u914d\u77e5\u4e4e\u6587\u7ae0\u7f16\u8f91\u5668 \u00b6 \u77e5\u4e4e\u652f\u6301Markdown\u6587\u4ef6\u5bfc\u5165\uff0c\u4f46\u65e0\u6cd5\u8bc6\u522btex\u516c\u5f0f\u3002\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06 $...$ \u548c $$...$$ \u66ff\u6362\u4e3a\u77e5\u4e4e\u652f\u6301\u7684\u516c\u5f0f\u3002 import sys import re interline_tag = '\\n<img src=\"https://www.zhihu.com/equation?tex={}\" alt=\"{}\\\\\\\\\" class=\"ee_img tr_noresize\" eeimg=\"1\">\\n' interline_pattern = \"\\$\\$\\n*(.*?)\\n*\\$\\$\" inline_tag = '<img src=\"https://www.zhihu.com/equation?tex={}\" alt=\"{}\" class=\"ee_img tr_noresize\" eeimg=\"1\">' inline_pattern = \"\\$\\n*(.*?)\\n*\\$\" def replace_tex(content): def dashrepl(matchobj, tag): formular = matchobj.group(1) return tag.format(formular, formular) content = re.sub(interline_pattern, lambda mo: dashrepl(mo, interline_tag), content) content = re.sub(inline_pattern, lambda mo: dashrepl(mo, inline_tag), content) return content if __name__=='__main__': assert len(sys.argv) > 1, \"Error: need filename as a argument\" filename = sys.argv[1] with open(filename, 'r') as f: content = f.read() with open(filename, 'w') as f: f.write(replace_tex(content)) \u77e5\u4e4e\u4e0a\u5982\u4f55\u4f7f\u7528 Markdown \uff1f - \u5c0f\u9c7c\u5e72\u7684\u56de\u7b54 - \u77e5\u4e4e https://www.zhihu.com/question/25430912/answer/957067212 Latex\u6280\u5de7 \u00b6 \u6a21\u677fv0.1 \u00b6 \u66f4\u65b0\u8bb0\u5f55\uff1a \u00b6 \u8fc1\u79fb\u5230Mac\u672c\u5730\u8fdb\u884c\u7f16\u8bd1\uff0cctex\u5bfc\u5165\u65f6\u6ca1\u6709UTF-8\u53c2\u6570\u3002 \\documentclass { article } \\usepackage { ctex } \\usepackage [left=2cm,right=2cm,top=2cm,bottom=4cm] { geometry } \\title { Title } \\author { Author } \\date { May 2021 } \\usepackage { natbib } \\usepackage { graphicx } \\usepackage { enumerate } \\usepackage { amsmath } \\usepackage { amssymb } %\u4e8c\u5143\u5173\u7cfb\u7b26 \\usepackage { listings } \\usepackage { ulem } \\usepackage { tabularx } % \u56db\u5f20\u5c0f\u56fe\u7247 \\usepackage { graphicx } \\usepackage { subfigure } % \u53bb\u9664Caption\u81ea\u52a8\u524d\u7f00 \\usepackage { caption } %\u56fe\u50cf\u8ddf\u5728\u6bb5\u843d\u540e\u9762 \\usepackage { float } \\begin { document } \\maketitle % \u9700\u8981\u4f7f\u7528\u63d2\u5165\u56fe\u50cf\u65f6\u4f7f\u7528 % \\begin{figure}[H] % \\centering % \\includegraphics[scale=0.8]{img/c1.png} % \\caption{\u5b57\u5e55} % \\label{fig:a2} % \\end{figure} \\bibliographystyle { plain } \\bibliography { references } \\end { document } \u57fa\u7840\u6982\u5ff5\u548c\u8bbe\u7f6e \u00b6 \u57fa\u7840\u6982\u5ff5 \u00b6 \u6392\u7248\u5de5\u5177\uff1apdfTeX, pdfLaTeX, XeTeX, XeLaTeX \u7b49 LaTeX\u5c06\u6e90\u6587\u4ef6\u4e2d\u7684\u6362\u884c\u5f53\u4f5c\u662f\u7a7a\u683c\uff1b\u9700\u8981\u53e6\u8d77\u4e00\u6bb5\uff0c\u5219\u9700\u8981\u7528\u4e24\u4e2a\u6362\u884c\uff08\u4e00\u4e2a\u7a7a\u884c\uff09\u5b9e\u73b0\u3002 \u4f7f\u7528\u4e2d\u6587 \u00b6 \u4f7f\u7528 ctexart \u6587\u6863\u7c7b\u3002 \\documentclass [UTF8] { ctexart } \\usepackage [T1] { fontenc } %\u9632\u6b62\u67d0\u4e9b\u7b26\u53f7\u663e\u793a\u4e0d\u6b63\u786e \u6216\u4f7f\u7528 ctex \u5b8f\u5305\uff0c\u63a8\u8350\u4f7f\u7528 xelatex \u7f16\u8bd1\u3002 \\documentclass { article } \\usepackage [UTF8] { ctex } \u53c2\u8003\uff1a1. \u5168\u9762\u603b\u7ed3\u5982\u4f55\u5728 LaTeX \u4e2d\u4f7f\u7528\u4e2d\u6587 (2020 \u6700\u65b0\u7248) \u6587\u7ae0\u5143\u4fe1\u606f \u00b6 \\documentclass [UTF8] { ctexart } \\title { \u4f60\u597d\uff0cworld! } \\author { Liam } \\date { \\today } \\begin { document } \\maketitle \u4f60\u597d\uff0cworld! \\end { document } \u6587\u7ae0\u7ed3\u6784 \u00b6 \u5728\u6587\u6863\u7c7b article / cetexart \u4e2d \\section{\u00b7} \\subsection{\u00b7} \\subsubsection{\u00b7} \\paragraph{\u00b7} \\subparagraph{\u00b7} \u6587\u7ae0\u76ee\u5f55 \u00b6 \u63d2\u5165 \\tableofcontents \uff0c\u5e76\u7528XeLaTeX\u7f16\u8bd1**\u4e24\u6b21**\u3002 \u5217\u8868 \u00b6 \u4f7f\u7528 itemize (\u70b9\u70b9), enumerate (\u7f16\u53f7)\u73af\u5883 \u81ea\u5b9a\u4e49\u5217\u8868\u7f16\u53f7\u5f62\u5f0f \u00b6 \u9700\u8981\u5bfc\u5165 \\begin { enumerate } [(a)] \u63d2\u5165\u56fe\u50cf \u00b6 \u6700\u597d\u4f7f\u7528 graphicx \u73af\u5883\u63d0\u4f9b\u7684 \\includegraphics \u547d\u4ee4\u3002 \u6700\u7b80\u5355\u7684\u7528\u6cd5 \u00b6 \\documentclass { article } \\usepackage { graphicx } \\begin { document } \\begin { figure } \\centering % \u63d2\u56fe\u5c45\u4e2d \\includegraphics { a.jpg } \\caption { \u6709\u56fe\u6709\u771f\u76f8 } \\label { fig:myphoto } \\end { figure } \\end { document } \u63a7\u5236\u56fe\u50cf\u7684\u5927\u5c0f\uff08\u63a8\u8350\uff09 \u00b6 \\includegraphics[width = .8\\textwidth]{a.jpg} - .8\\textwidth \uff1a\u8868\u793a\u9875\u9762\u5bbd\u5ea6\u7684\u767e\u5206\u4e4b\u516b\u5341\u3002 \u6d6e\u52a8\u4f53 \u00b6 \u56fe\u50cf\u548c\u8868\u683c\u901a\u5e38\u9700\u8981\u5360\u636e\u5927\u5757\u7a7a\u95f4\uff0c\u9700\u8981\u5bf9 figure \u548c table \u73af\u5883\u8fdb\u884c\u8bbe\u7f6e\uff0c\u8ba9\u5176\u81ea\u52a8\u8c03\u6574\u4f4d\u7f6e\u3002 htb \u5206\u522b\u8868\u793ahere, top, bottom\uff0c\u4ee5h-t-b\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97latex\u5c3d\u91cf\u6ee1\u8db3\u6392\u5728\u524d\u9762\u7684\u6d6e\u52a8\u683c\u5f0f \u8fd8\u53ef\u4ee5\u4f7f\u7528 float \u5b8f\u5305\u7684 H \u9009\u9879\uff0c\u5f3a\u5236\u653e\u5728\u5f53\u524d\u6bb5\u843d\u540e\u3002\u653e\u4e0d\u4e0b\u7684\u8bdd\uff0c\u9700\u8981\u624b\u52a8\u8c03\u6574\u3002 \\begin { figure } [htb] \\centering \\includegraphics { a.jpg } \\caption { \u6709\u56fe\u6709\u771f\u76f8 } \\label { fig:myphoto } \\end { figure } \u53c2\u8003\uff1a 1. LaTeX \u4e2d\u7684\u6d6e\u52a8\u4f53\uff1a\u57fa\u7840\u7bc7 \u53bb\u9664caption\u81ea\u52a8\u524d\u7f00 \u00b6 \u5bfc\u5165\u5305 \\usepackage{caption} \uff0c\u7136\u540e\u4f7f\u7528 \\caption*{} \u56db\u5e45\u56fe\u56db\u5757\u663e\u793a \u00b6 \u9700\u8981 graphicx , subfigure . \\begin { figure* } \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig1.jpg } \\caption { fig1 } \\label { fig:side:a } \\end { minipage } % \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig2.jpg } \\caption { fig2 } \\label { fig:side:b } \\end { minipage } \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig3.jpg } \\caption { fig3 } \\label { fig:side:a } \\end { minipage } % \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig4.jpg } \\caption { fig4 } \\label { fig:side:b } \\end { minipage } \\end { figure* } \u53c2\u8003\uff1a 1. \u5982\u4f55\u4f7f\u7528Latex\u5c06\u56db\u5e45\u56fe\u8de8\u680f\u6392\u5217 \u63d2\u5165\u8868\u683c \u00b6 \u4f7f\u7528 tabular \u73af\u5883 \u7b2c\u4e00\u884c\u4e2d\uff0c | \u8868\u793a\u5217\u4e0a\u7684\u7ad6\u7ebf\uff0c l , c , r \u8868\u793a\u8be5\u5217\u662f\u5411\u5de6\u3001\u5c45\u4e2d\u8fd8\u662f\u5411\u53f3\u5bf9\u9f50\u3002 \\hline \u8868\u793a\u6a2a\u7ebf\uff0c \\begin { tabular }{ |l|c|r| } \\hline \u64cd\u4f5c\u7cfb\u7edf & \u53d1\u884c\u7248 & \u7f16\u8f91\u5668 \\\\ \\hline \\end { tabular } \u63d2\u5165\u6570\u5b66\u516c\u5f0f \u00b6 \u9700\u8981\u52a0\u8f7d amsmath \u5b8f\u5305\u3002\u4e8c\u5143\u5173\u7cfb\u7b26\uff1a\u52a0\u8f7d amssymb \u5b8f\u5305 \u6570\u5b66\u6a21\u5f0f \u00b6 \u5bf9\u884c\u95f4\u516c\u5f0f\u7f16\u53f7\uff0c\u4f7f\u7528 equation \u73af\u5883\uff0c equation* \u5219\u662f\u9ed8\u8ba4\u4e0d\u7f16\u53f7\u3002 \u591a\u884c\u516c\u5f0f\u5bf9\u9f50\u4f7f\u7528 align \u73af\u5883\uff0c\u83ab\u7528 eqnarray \u77e9\u9635\u4f7f\u7528 matrix \u73af\u5883\u3002 \u5206\u6bb5\u51fd\u6570 \u00b6 \u4f7f\u7528 cases \u6b21\u73af\u5883\uff0c\u5fc5\u987b\u5305\u542b\u5728\u6570\u5b66\u73af\u5883\u5185\u3002 \\[ y = \\begin {cases} - x, \\quad x \\leq 0 \\\\ x, \\quad x> 0 \\end {cases} \\] \u63d2\u5165\u4ee3\u7801\u5757 \u00b6 \u8bba\u6587\u4e2d\u7684\u4f2a\u4ee3\u7801 \u00b6 \u7a0b\u5e8f\u4ee3\u7801 \u00b6 \u591a\u884c \u00b6 \u9ed8\u8ba4\u53ef\u4ee5\u4f7f\u7528verbatim\u73af\u5883\u5c55\u793a\u4ee3\u7801\uff0c \u901a\u5e38\u4f7f\u7528 listings \u5305\u4e2d\u7684 lstlisting \u73af\u5883\u6765\u663e\u793a\u3002 \u5bfc\u8a00\u533a\u8bbe\u7f6e\u6837\u5f0f \\usepackage { listings } %\u5bfc\u5165\u5305 \\definecolor { codebrown }{ rgb }{ 0.8,0.44,0.2 } \\definecolor { codegray }{ rgb }{ 0.5,0.5,0.5 } \\definecolor { codepurple }{ rgb }{ 0.58,0,0.82 } \\definecolor { backcolour }{ rgb }{ 0.95,0.95,0.92 } \\lstdefinestyle { mystyle }{ backgroundcolor= \\color { backcolour } , commentstyle= \\color { codebrown } , keywordstyle= \\color { magenta } , numberstyle= \\tiny\\color { codegray } , stringstyle= \\color { codepurple } , basicstyle= \\ttfamily\\footnotesize , breakatwhitespace=false, breaklines=true, captionpos=b, keepspaces=true, numbers=left, % numbersep=5pt, % numbers=none, showspaces=false, showstringspaces=false, showtabs=false, tabsize=2, xleftmargin=0.1 \\textwidth , xrightmargin=0.1 \\textwidth } \\lstset { style=mystyle } \u6837\u4f8b\u4ee3\u7801 \\begin { lstlisting } [language=Python, title=XXX] code... \\end { lstlisting } \u53c2\u8003\uff1a https://www.overleaf.com/learn/latex/Code_listing \u7248\u9762\u8bbe\u7f6e \u00b6 \u9875\u8fb9\u8ddd \u00b6 \u4f7f\u7528 geometry \u5b8f\u5305\u3002 \\usepackage { geometry } % \\geometry{papersize={20cm,15cm}} %\u8bbe\u7f6e\u9875\u9762\u5927\u5c0f \\geometry { left=1cm,right=2cm,top=3cm,bottom=4cm } \u5f15\u7528 \u00b6 \u56fe\u7247\u5f15\u7528 \u00b6 \u5f69\u8272\u6587\u672c\u6846 \u00b6 \u53c2\u8003 1. LaTeX \u9ed1\u9b54\u6cd5\uff08\u4e00\uff09\uff1atcolorbox \u5b8f\u5305\u7b80\u660e\u6559\u7a0b \u53c2\u8003\uff1a 1. \u4e00\u4efd\u5176\u5b9e\u5f88\u77ed\u7684 LaTeX \u5165\u95e8\u6587\u6863 \u5f3a\u70c8\u63a8\u8350\uff01 2. The Not So Short Introduction To LATEX (Chinese Edition), v6.02","title":"\u5199\u4f5c\u6280\u5de7"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#markdown","text":"","title":"Markdown\u6280\u5de7"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#markdown_1","text":"\u77e5\u4e4e\u652f\u6301Markdown\u6587\u4ef6\u5bfc\u5165\uff0c\u4f46\u65e0\u6cd5\u8bc6\u522btex\u516c\u5f0f\u3002\u901a\u8fc7\u4ee5\u4e0b\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06 $...$ \u548c $$...$$ \u66ff\u6362\u4e3a\u77e5\u4e4e\u652f\u6301\u7684\u516c\u5f0f\u3002 import sys import re interline_tag = '\\n<img src=\"https://www.zhihu.com/equation?tex={}\" alt=\"{}\\\\\\\\\" class=\"ee_img tr_noresize\" eeimg=\"1\">\\n' interline_pattern = \"\\$\\$\\n*(.*?)\\n*\\$\\$\" inline_tag = '<img src=\"https://www.zhihu.com/equation?tex={}\" alt=\"{}\" class=\"ee_img tr_noresize\" eeimg=\"1\">' inline_pattern = \"\\$\\n*(.*?)\\n*\\$\" def replace_tex(content): def dashrepl(matchobj, tag): formular = matchobj.group(1) return tag.format(formular, formular) content = re.sub(interline_pattern, lambda mo: dashrepl(mo, interline_tag), content) content = re.sub(inline_pattern, lambda mo: dashrepl(mo, inline_tag), content) return content if __name__=='__main__': assert len(sys.argv) > 1, \"Error: need filename as a argument\" filename = sys.argv[1] with open(filename, 'r') as f: content = f.read() with open(filename, 'w') as f: f.write(replace_tex(content)) \u77e5\u4e4e\u4e0a\u5982\u4f55\u4f7f\u7528 Markdown \uff1f - \u5c0f\u9c7c\u5e72\u7684\u56de\u7b54 - \u77e5\u4e4e https://www.zhihu.com/question/25430912/answer/957067212","title":"Markdown\u9002\u914d\u77e5\u4e4e\u6587\u7ae0\u7f16\u8f91\u5668"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#latex","text":"","title":"Latex\u6280\u5de7"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#v01","text":"","title":"\u6a21\u677fv0.1"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_1","text":"\u8fc1\u79fb\u5230Mac\u672c\u5730\u8fdb\u884c\u7f16\u8bd1\uff0cctex\u5bfc\u5165\u65f6\u6ca1\u6709UTF-8\u53c2\u6570\u3002 \\documentclass { article } \\usepackage { ctex } \\usepackage [left=2cm,right=2cm,top=2cm,bottom=4cm] { geometry } \\title { Title } \\author { Author } \\date { May 2021 } \\usepackage { natbib } \\usepackage { graphicx } \\usepackage { enumerate } \\usepackage { amsmath } \\usepackage { amssymb } %\u4e8c\u5143\u5173\u7cfb\u7b26 \\usepackage { listings } \\usepackage { ulem } \\usepackage { tabularx } % \u56db\u5f20\u5c0f\u56fe\u7247 \\usepackage { graphicx } \\usepackage { subfigure } % \u53bb\u9664Caption\u81ea\u52a8\u524d\u7f00 \\usepackage { caption } %\u56fe\u50cf\u8ddf\u5728\u6bb5\u843d\u540e\u9762 \\usepackage { float } \\begin { document } \\maketitle % \u9700\u8981\u4f7f\u7528\u63d2\u5165\u56fe\u50cf\u65f6\u4f7f\u7528 % \\begin{figure}[H] % \\centering % \\includegraphics[scale=0.8]{img/c1.png} % \\caption{\u5b57\u5e55} % \\label{fig:a2} % \\end{figure} \\bibliographystyle { plain } \\bibliography { references } \\end { document }","title":"\u66f4\u65b0\u8bb0\u5f55\uff1a"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_2","text":"","title":"\u57fa\u7840\u6982\u5ff5\u548c\u8bbe\u7f6e"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_3","text":"\u6392\u7248\u5de5\u5177\uff1apdfTeX, pdfLaTeX, XeTeX, XeLaTeX \u7b49 LaTeX\u5c06\u6e90\u6587\u4ef6\u4e2d\u7684\u6362\u884c\u5f53\u4f5c\u662f\u7a7a\u683c\uff1b\u9700\u8981\u53e6\u8d77\u4e00\u6bb5\uff0c\u5219\u9700\u8981\u7528\u4e24\u4e2a\u6362\u884c\uff08\u4e00\u4e2a\u7a7a\u884c\uff09\u5b9e\u73b0\u3002","title":"\u57fa\u7840\u6982\u5ff5"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_4","text":"\u4f7f\u7528 ctexart \u6587\u6863\u7c7b\u3002 \\documentclass [UTF8] { ctexart } \\usepackage [T1] { fontenc } %\u9632\u6b62\u67d0\u4e9b\u7b26\u53f7\u663e\u793a\u4e0d\u6b63\u786e \u6216\u4f7f\u7528 ctex \u5b8f\u5305\uff0c\u63a8\u8350\u4f7f\u7528 xelatex \u7f16\u8bd1\u3002 \\documentclass { article } \\usepackage [UTF8] { ctex } \u53c2\u8003\uff1a1. \u5168\u9762\u603b\u7ed3\u5982\u4f55\u5728 LaTeX \u4e2d\u4f7f\u7528\u4e2d\u6587 (2020 \u6700\u65b0\u7248)","title":"\u4f7f\u7528\u4e2d\u6587"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_5","text":"\\documentclass [UTF8] { ctexart } \\title { \u4f60\u597d\uff0cworld! } \\author { Liam } \\date { \\today } \\begin { document } \\maketitle \u4f60\u597d\uff0cworld! \\end { document }","title":"\u6587\u7ae0\u5143\u4fe1\u606f"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_6","text":"\u5728\u6587\u6863\u7c7b article / cetexart \u4e2d \\section{\u00b7} \\subsection{\u00b7} \\subsubsection{\u00b7} \\paragraph{\u00b7} \\subparagraph{\u00b7}","title":"\u6587\u7ae0\u7ed3\u6784"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_7","text":"\u63d2\u5165 \\tableofcontents \uff0c\u5e76\u7528XeLaTeX\u7f16\u8bd1**\u4e24\u6b21**\u3002","title":"\u6587\u7ae0\u76ee\u5f55"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_8","text":"\u4f7f\u7528 itemize (\u70b9\u70b9), enumerate (\u7f16\u53f7)\u73af\u5883","title":"\u5217\u8868"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_9","text":"\u9700\u8981\u5bfc\u5165 \\begin { enumerate } [(a)]","title":"\u81ea\u5b9a\u4e49\u5217\u8868\u7f16\u53f7\u5f62\u5f0f"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_10","text":"\u6700\u597d\u4f7f\u7528 graphicx \u73af\u5883\u63d0\u4f9b\u7684 \\includegraphics \u547d\u4ee4\u3002","title":"\u63d2\u5165\u56fe\u50cf"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_11","text":"\\documentclass { article } \\usepackage { graphicx } \\begin { document } \\begin { figure } \\centering % \u63d2\u56fe\u5c45\u4e2d \\includegraphics { a.jpg } \\caption { \u6709\u56fe\u6709\u771f\u76f8 } \\label { fig:myphoto } \\end { figure } \\end { document }","title":"\u6700\u7b80\u5355\u7684\u7528\u6cd5"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_12","text":"\\includegraphics[width = .8\\textwidth]{a.jpg} - .8\\textwidth \uff1a\u8868\u793a\u9875\u9762\u5bbd\u5ea6\u7684\u767e\u5206\u4e4b\u516b\u5341\u3002","title":"\u63a7\u5236\u56fe\u50cf\u7684\u5927\u5c0f\uff08\u63a8\u8350\uff09"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_13","text":"\u56fe\u50cf\u548c\u8868\u683c\u901a\u5e38\u9700\u8981\u5360\u636e\u5927\u5757\u7a7a\u95f4\uff0c\u9700\u8981\u5bf9 figure \u548c table \u73af\u5883\u8fdb\u884c\u8bbe\u7f6e\uff0c\u8ba9\u5176\u81ea\u52a8\u8c03\u6574\u4f4d\u7f6e\u3002 htb \u5206\u522b\u8868\u793ahere, top, bottom\uff0c\u4ee5h-t-b\u7684\u987a\u5e8f\uff0c\u4f7f\u5f97latex\u5c3d\u91cf\u6ee1\u8db3\u6392\u5728\u524d\u9762\u7684\u6d6e\u52a8\u683c\u5f0f \u8fd8\u53ef\u4ee5\u4f7f\u7528 float \u5b8f\u5305\u7684 H \u9009\u9879\uff0c\u5f3a\u5236\u653e\u5728\u5f53\u524d\u6bb5\u843d\u540e\u3002\u653e\u4e0d\u4e0b\u7684\u8bdd\uff0c\u9700\u8981\u624b\u52a8\u8c03\u6574\u3002 \\begin { figure } [htb] \\centering \\includegraphics { a.jpg } \\caption { \u6709\u56fe\u6709\u771f\u76f8 } \\label { fig:myphoto } \\end { figure } \u53c2\u8003\uff1a 1. LaTeX \u4e2d\u7684\u6d6e\u52a8\u4f53\uff1a\u57fa\u7840\u7bc7","title":"\u6d6e\u52a8\u4f53"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#caption","text":"\u5bfc\u5165\u5305 \\usepackage{caption} \uff0c\u7136\u540e\u4f7f\u7528 \\caption*{}","title":"\u53bb\u9664caption\u81ea\u52a8\u524d\u7f00"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_14","text":"\u9700\u8981 graphicx , subfigure . \\begin { figure* } \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig1.jpg } \\caption { fig1 } \\label { fig:side:a } \\end { minipage } % \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig2.jpg } \\caption { fig2 } \\label { fig:side:b } \\end { minipage } \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig3.jpg } \\caption { fig3 } \\label { fig:side:a } \\end { minipage } % \\begin { minipage } [t] { 0.5 \\textwidth } \\centering \\includegraphics [width=3.2in] { fig4.jpg } \\caption { fig4 } \\label { fig:side:b } \\end { minipage } \\end { figure* } \u53c2\u8003\uff1a 1. \u5982\u4f55\u4f7f\u7528Latex\u5c06\u56db\u5e45\u56fe\u8de8\u680f\u6392\u5217","title":"\u56db\u5e45\u56fe\u56db\u5757\u663e\u793a"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_15","text":"\u4f7f\u7528 tabular \u73af\u5883 \u7b2c\u4e00\u884c\u4e2d\uff0c | \u8868\u793a\u5217\u4e0a\u7684\u7ad6\u7ebf\uff0c l , c , r \u8868\u793a\u8be5\u5217\u662f\u5411\u5de6\u3001\u5c45\u4e2d\u8fd8\u662f\u5411\u53f3\u5bf9\u9f50\u3002 \\hline \u8868\u793a\u6a2a\u7ebf\uff0c \\begin { tabular }{ |l|c|r| } \\hline \u64cd\u4f5c\u7cfb\u7edf & \u53d1\u884c\u7248 & \u7f16\u8f91\u5668 \\\\ \\hline \\end { tabular }","title":"\u63d2\u5165\u8868\u683c"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_16","text":"\u9700\u8981\u52a0\u8f7d amsmath \u5b8f\u5305\u3002\u4e8c\u5143\u5173\u7cfb\u7b26\uff1a\u52a0\u8f7d amssymb \u5b8f\u5305","title":"\u63d2\u5165\u6570\u5b66\u516c\u5f0f"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_17","text":"\u5bf9\u884c\u95f4\u516c\u5f0f\u7f16\u53f7\uff0c\u4f7f\u7528 equation \u73af\u5883\uff0c equation* \u5219\u662f\u9ed8\u8ba4\u4e0d\u7f16\u53f7\u3002 \u591a\u884c\u516c\u5f0f\u5bf9\u9f50\u4f7f\u7528 align \u73af\u5883\uff0c\u83ab\u7528 eqnarray \u77e9\u9635\u4f7f\u7528 matrix \u73af\u5883\u3002","title":"\u6570\u5b66\u6a21\u5f0f"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_18","text":"\u4f7f\u7528 cases \u6b21\u73af\u5883\uff0c\u5fc5\u987b\u5305\u542b\u5728\u6570\u5b66\u73af\u5883\u5185\u3002 \\[ y = \\begin {cases} - x, \\quad x \\leq 0 \\\\ x, \\quad x> 0 \\end {cases} \\]","title":"\u5206\u6bb5\u51fd\u6570"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_19","text":"","title":"\u63d2\u5165\u4ee3\u7801\u5757"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_20","text":"","title":"\u8bba\u6587\u4e2d\u7684\u4f2a\u4ee3\u7801"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_21","text":"","title":"\u7a0b\u5e8f\u4ee3\u7801"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_22","text":"\u9ed8\u8ba4\u53ef\u4ee5\u4f7f\u7528verbatim\u73af\u5883\u5c55\u793a\u4ee3\u7801\uff0c \u901a\u5e38\u4f7f\u7528 listings \u5305\u4e2d\u7684 lstlisting \u73af\u5883\u6765\u663e\u793a\u3002 \u5bfc\u8a00\u533a\u8bbe\u7f6e\u6837\u5f0f \\usepackage { listings } %\u5bfc\u5165\u5305 \\definecolor { codebrown }{ rgb }{ 0.8,0.44,0.2 } \\definecolor { codegray }{ rgb }{ 0.5,0.5,0.5 } \\definecolor { codepurple }{ rgb }{ 0.58,0,0.82 } \\definecolor { backcolour }{ rgb }{ 0.95,0.95,0.92 } \\lstdefinestyle { mystyle }{ backgroundcolor= \\color { backcolour } , commentstyle= \\color { codebrown } , keywordstyle= \\color { magenta } , numberstyle= \\tiny\\color { codegray } , stringstyle= \\color { codepurple } , basicstyle= \\ttfamily\\footnotesize , breakatwhitespace=false, breaklines=true, captionpos=b, keepspaces=true, numbers=left, % numbersep=5pt, % numbers=none, showspaces=false, showstringspaces=false, showtabs=false, tabsize=2, xleftmargin=0.1 \\textwidth , xrightmargin=0.1 \\textwidth } \\lstset { style=mystyle } \u6837\u4f8b\u4ee3\u7801 \\begin { lstlisting } [language=Python, title=XXX] code... \\end { lstlisting } \u53c2\u8003\uff1a https://www.overleaf.com/learn/latex/Code_listing","title":"\u591a\u884c"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_23","text":"","title":"\u7248\u9762\u8bbe\u7f6e"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_24","text":"\u4f7f\u7528 geometry \u5b8f\u5305\u3002 \\usepackage { geometry } % \\geometry{papersize={20cm,15cm}} %\u8bbe\u7f6e\u9875\u9762\u5927\u5c0f \\geometry { left=1cm,right=2cm,top=3cm,bottom=4cm }","title":"\u9875\u8fb9\u8ddd"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_25","text":"","title":"\u5f15\u7528"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_26","text":"","title":"\u56fe\u7247\u5f15\u7528"},{"location":"%E5%AF%BC%E8%88%AA/%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/#_27","text":"\u53c2\u8003 1. LaTeX \u9ed1\u9b54\u6cd5\uff08\u4e00\uff09\uff1atcolorbox \u5b8f\u5305\u7b80\u660e\u6559\u7a0b \u53c2\u8003\uff1a 1. \u4e00\u4efd\u5176\u5b9e\u5f88\u77ed\u7684 LaTeX \u5165\u95e8\u6587\u6863 \u5f3a\u70c8\u63a8\u8350\uff01 2. The Not So Short Introduction To LATEX (Chinese Edition), v6.02","title":"\u5f69\u8272\u6587\u672c\u6846"},{"location":"%E5%AF%BC%E8%88%AA/%E5%BF%AB%E6%8D%B7%E9%94%AE/","text":"Markdown\u5feb\u6377\u952e \u00b6 Chrome\u5feb\u6377\u952e \u00b6 Ctrl+Tab \u6216 Ctrl+PgDown \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875 Ctrl+Shift+Tab \u6216 Ctrl+PgUp \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875","title":"\u5feb\u6377\u952e"},{"location":"%E5%AF%BC%E8%88%AA/%E5%BF%AB%E6%8D%B7%E9%94%AE/#markdown","text":"","title":"Markdown\u5feb\u6377\u952e"},{"location":"%E5%AF%BC%E8%88%AA/%E5%BF%AB%E6%8D%B7%E9%94%AE/#chrome","text":"Ctrl+Tab \u6216 Ctrl+PgDown \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875 Ctrl+Shift+Tab \u6216 Ctrl+PgUp \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875","title":"Chrome\u5feb\u6377\u952e"},{"location":"%E5%AF%BC%E8%88%AA/%E6%95%B0%E5%AD%A6%E6%89%8B%E5%86%8C/","text":"\u57fa\u7840\u6570\u5b66\u516c\u5f0f \u00b6 \u6307\u6570\u548c\u5bf9\u6570 \u00b6 \u7ed9\u5b9a\u5b9e\u6570 a>0, m, n a>0, m, n \uff0c\u6709\u4ee5\u4e0b\u6052\u7b49\u5f0f\uff1a \\begin{aligned} \\left(a^{m}\\right)^{n} &=a^{m n} \\\\ a^{m} a^{n} &=a^{m+n} \\end{aligned} \\begin{aligned} \\left(a^{m}\\right)^{n} &=a^{m n} \\\\ a^{m} a^{n} &=a^{m+n} \\end{aligned} \u5bf9\u6570 \\begin{aligned} a &=b^{\\log _{b} a} \\\\ \\log _{c}(a b) &=\\log _{c} a+\\log _{c} b \\\\ \\log _{b} a^{n} &=n \\log _{b} a \\\\ \\log _{b} a &=\\frac{\\log _{c} a}{\\log _{c} b} \\\\ \\log _{b} a &=\\frac{1}{\\log _{a} b} \\\\ a^{\\log _{b} c} &=c^{\\log _{b} a} \\end{aligned} \\begin{aligned} a &=b^{\\log _{b} a} \\\\ \\log _{c}(a b) &=\\log _{c} a+\\log _{c} b \\\\ \\log _{b} a^{n} &=n \\log _{b} a \\\\ \\log _{b} a &=\\frac{\\log _{c} a}{\\log _{c} b} \\\\ \\log _{b} a &=\\frac{1}{\\log _{a} b} \\\\ a^{\\log _{b} c} &=c^{\\log _{b} a} \\end{aligned} \u7ec4\u5408\u6570\u5b66\u7684\u5e38\u7528\u516c\u5f0f \u00b6 \u6392\u5217 P_n^m=\\frac{n !}{(n-m) !} P_n^m=\\frac{n !}{(n-m) !} \u7ec4\u5408 C_n^m=\\frac{n !}{(n-m) ! \\cdot m !} C_n^m=\\frac{n !}{(n-m) ! \\cdot m !} \\begin{aligned} C_{n}^{m}&=C_{n-1}^{m-1}+C_{n-1}^{m} \\\\ m C_{n}^{m}&=n C_{n-1}^{m-1} \\\\ C_{n}^{0}+C_{n}^{1}+C_{n}^{2}+\\ldots \\ldots+C_{n}^{n}&=2^{n} \\\\ 1 C_{n}^{1}+2 C_{n}^{2}+3 C_{n}^{3}+\\ldots \\ldots+n C_{n}^{n}&=n 2^{n-1} \\\\ 1^{2} C_{n}^{1}+2^{2} C_{n}^{2}+3^{2} C_{n}^{3}+\\ldots . .+n^{2} C_{n}^{n}&=n(n+1) 2^{n-2} \\\\ \\frac{C_{n}^{1}}{1}-\\frac{C_{n}^{2}}{2}+\\frac{C_{n}^{3}}{3}+\\ldots \\ldots+(-1)^{n-1} \\frac{C_{n}^{n}}{n}&=1+\\frac{1}{2}+\\frac{1}{3}+\\ldots \\ldots+\\frac{1}{n} \\\\ \\left(C_{n}^{0}\\right)^{2}+\\left(C_{n}^{1}\\right)^{2}+\\left(C_{n}^{2}\\right)^{2}+\\ldots \\ldots+\\left(C_{n}^{n}\\right)^{2}&=C_{2 n}^{n} \\end{aligned} \\begin{aligned} C_{n}^{m}&=C_{n-1}^{m-1}+C_{n-1}^{m} \\\\ m C_{n}^{m}&=n C_{n-1}^{m-1} \\\\ C_{n}^{0}+C_{n}^{1}+C_{n}^{2}+\\ldots \\ldots+C_{n}^{n}&=2^{n} \\\\ 1 C_{n}^{1}+2 C_{n}^{2}+3 C_{n}^{3}+\\ldots \\ldots+n C_{n}^{n}&=n 2^{n-1} \\\\ 1^{2} C_{n}^{1}+2^{2} C_{n}^{2}+3^{2} C_{n}^{3}+\\ldots . .+n^{2} C_{n}^{n}&=n(n+1) 2^{n-2} \\\\ \\frac{C_{n}^{1}}{1}-\\frac{C_{n}^{2}}{2}+\\frac{C_{n}^{3}}{3}+\\ldots \\ldots+(-1)^{n-1} \\frac{C_{n}^{n}}{n}&=1+\\frac{1}{2}+\\frac{1}{3}+\\ldots \\ldots+\\frac{1}{n} \\\\ \\left(C_{n}^{0}\\right)^{2}+\\left(C_{n}^{1}\\right)^{2}+\\left(C_{n}^{2}\\right)^{2}+\\ldots \\ldots+\\left(C_{n}^{n}\\right)^{2}&=C_{2 n}^{n} \\end{aligned} \u53c2\u8003\uff1a https://blog.csdn.net/linruier2017/article/details/82945396","title":"\u6570\u5b66\u624b\u518c"},{"location":"%E5%AF%BC%E8%88%AA/%E6%95%B0%E5%AD%A6%E6%89%8B%E5%86%8C/#_1","text":"","title":"\u57fa\u7840\u6570\u5b66\u516c\u5f0f"},{"location":"%E5%AF%BC%E8%88%AA/%E6%95%B0%E5%AD%A6%E6%89%8B%E5%86%8C/#_2","text":"\u7ed9\u5b9a\u5b9e\u6570 a>0, m, n a>0, m, n \uff0c\u6709\u4ee5\u4e0b\u6052\u7b49\u5f0f\uff1a \\begin{aligned} \\left(a^{m}\\right)^{n} &=a^{m n} \\\\ a^{m} a^{n} &=a^{m+n} \\end{aligned} \\begin{aligned} \\left(a^{m}\\right)^{n} &=a^{m n} \\\\ a^{m} a^{n} &=a^{m+n} \\end{aligned} \u5bf9\u6570 \\begin{aligned} a &=b^{\\log _{b} a} \\\\ \\log _{c}(a b) &=\\log _{c} a+\\log _{c} b \\\\ \\log _{b} a^{n} &=n \\log _{b} a \\\\ \\log _{b} a &=\\frac{\\log _{c} a}{\\log _{c} b} \\\\ \\log _{b} a &=\\frac{1}{\\log _{a} b} \\\\ a^{\\log _{b} c} &=c^{\\log _{b} a} \\end{aligned} \\begin{aligned} a &=b^{\\log _{b} a} \\\\ \\log _{c}(a b) &=\\log _{c} a+\\log _{c} b \\\\ \\log _{b} a^{n} &=n \\log _{b} a \\\\ \\log _{b} a &=\\frac{\\log _{c} a}{\\log _{c} b} \\\\ \\log _{b} a &=\\frac{1}{\\log _{a} b} \\\\ a^{\\log _{b} c} &=c^{\\log _{b} a} \\end{aligned}","title":"\u6307\u6570\u548c\u5bf9\u6570"},{"location":"%E5%AF%BC%E8%88%AA/%E6%95%B0%E5%AD%A6%E6%89%8B%E5%86%8C/#_3","text":"\u6392\u5217 P_n^m=\\frac{n !}{(n-m) !} P_n^m=\\frac{n !}{(n-m) !} \u7ec4\u5408 C_n^m=\\frac{n !}{(n-m) ! \\cdot m !} C_n^m=\\frac{n !}{(n-m) ! \\cdot m !} \\begin{aligned} C_{n}^{m}&=C_{n-1}^{m-1}+C_{n-1}^{m} \\\\ m C_{n}^{m}&=n C_{n-1}^{m-1} \\\\ C_{n}^{0}+C_{n}^{1}+C_{n}^{2}+\\ldots \\ldots+C_{n}^{n}&=2^{n} \\\\ 1 C_{n}^{1}+2 C_{n}^{2}+3 C_{n}^{3}+\\ldots \\ldots+n C_{n}^{n}&=n 2^{n-1} \\\\ 1^{2} C_{n}^{1}+2^{2} C_{n}^{2}+3^{2} C_{n}^{3}+\\ldots . .+n^{2} C_{n}^{n}&=n(n+1) 2^{n-2} \\\\ \\frac{C_{n}^{1}}{1}-\\frac{C_{n}^{2}}{2}+\\frac{C_{n}^{3}}{3}+\\ldots \\ldots+(-1)^{n-1} \\frac{C_{n}^{n}}{n}&=1+\\frac{1}{2}+\\frac{1}{3}+\\ldots \\ldots+\\frac{1}{n} \\\\ \\left(C_{n}^{0}\\right)^{2}+\\left(C_{n}^{1}\\right)^{2}+\\left(C_{n}^{2}\\right)^{2}+\\ldots \\ldots+\\left(C_{n}^{n}\\right)^{2}&=C_{2 n}^{n} \\end{aligned} \\begin{aligned} C_{n}^{m}&=C_{n-1}^{m-1}+C_{n-1}^{m} \\\\ m C_{n}^{m}&=n C_{n-1}^{m-1} \\\\ C_{n}^{0}+C_{n}^{1}+C_{n}^{2}+\\ldots \\ldots+C_{n}^{n}&=2^{n} \\\\ 1 C_{n}^{1}+2 C_{n}^{2}+3 C_{n}^{3}+\\ldots \\ldots+n C_{n}^{n}&=n 2^{n-1} \\\\ 1^{2} C_{n}^{1}+2^{2} C_{n}^{2}+3^{2} C_{n}^{3}+\\ldots . .+n^{2} C_{n}^{n}&=n(n+1) 2^{n-2} \\\\ \\frac{C_{n}^{1}}{1}-\\frac{C_{n}^{2}}{2}+\\frac{C_{n}^{3}}{3}+\\ldots \\ldots+(-1)^{n-1} \\frac{C_{n}^{n}}{n}&=1+\\frac{1}{2}+\\frac{1}{3}+\\ldots \\ldots+\\frac{1}{n} \\\\ \\left(C_{n}^{0}\\right)^{2}+\\left(C_{n}^{1}\\right)^{2}+\\left(C_{n}^{2}\\right)^{2}+\\ldots \\ldots+\\left(C_{n}^{n}\\right)^{2}&=C_{2 n}^{n} \\end{aligned} \u53c2\u8003\uff1a https://blog.csdn.net/linruier2017/article/details/82945396","title":"\u7ec4\u5408\u6570\u5b66\u7684\u5e38\u7528\u516c\u5f0f"},{"location":"%E5%AF%BC%E8%88%AA/%E6%96%87%E6%A1%A3%E5%AF%BC%E8%88%AA/","text":"Git \u6587\u6863 \u00b6 Tag: \u53ef\u89c6\u5316 A Visual Git Reference Visualizing Git Concepts with D3","title":"\u6587\u6863\u5bfc\u822a"},{"location":"%E5%AF%BC%E8%88%AA/%E6%96%87%E6%A1%A3%E5%AF%BC%E8%88%AA/#git","text":"Tag: \u53ef\u89c6\u5316 A Visual Git Reference Visualizing Git Concepts with D3","title":"Git \u6587\u6863"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/","text":"\u7cfb\u7edf\u548c\u8f6f\u4ef6\u7248\u672c\u67e5\u770b\u547d\u4ee4 \u00b6 \u67e5\u770b\u7cfb\u7edf\u7248\u672c \u00b6 cat /etc/issue \u67e5\u770b\u7cfb\u7edf\u4fe1\u606f \u00b6 \u5305\u62ec\u4e3b\u673a\u540d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\uff0c\u5185\u6838\u7248\u672c\uff0c\u7cfb\u7edf\u67b6\u6784\u3002 hostnamectl \u67e5\u770b\u5185\u6838\u7248\u672c \u00b6 uname -a \u67e5\u770b\u8bbe\u5907\u4fe1\u606f \u00b6 \u67e5\u770bCPU\u4e2a\u6570 cat /proc/cpuinfo | grep \"physical id\" | uniq | wc -l \u67e5\u770bCPU\u6838\u6570 cat /proc/cpuinfo | grep \"cpu cores\" | uniq \u67e5\u770bCPU\u578b\u53f7 cat /proc/cpuinfo | grep 'model name' | uniq \u67e5\u770b\u663e\u5361\u4fe1\u606f lspci | grep -i nvidia \u67e5\u770b\u5185\u5b58\u6216\u786c\u76d8\u7a7a\u95f4 \u00b6 \u67e5\u770b\u5185\u5b58\u5927\u5c0f: free -g \u67e5\u770b\u786c\u76d8\u5927\u5c0f: df -h \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u5939\u5927\u5c0f: du -sh \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6bcf\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f: du -h --max-depth=1 \u4e0b\u8f7d\u6570\u636e \u00b6 curl\u6307\u4ee4\uff08\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u5176\u4ed6\u540e\u7f00\u7684\u6587\u4ef6\uff09 curl -O https://www.example.com/foo/bar.html \u53c2\u8003\uff1a https://www.ruanyifeng.com/blog/2019/09/curl-reference.html \u5e38\u7528\u6307\u4ee4 \u00b6 nohup \u00b6 nohup /root/runoob.sh & screen \u00b6 \u91cd\u542fattach\u5931\u8d25 \u00b6 \u62a5\u9519\uff1a There is no screen to be resumed matching \u89e3\u51b3\u65b9\u6848\uff1a attach to a not detached screen session screen -xr [sessionName] Bash\u6307\u4ee4 \u00b6 \u521b\u5efa\u8f6f\u94fe\u63a5 \u00b6 ln -s \u6307\u4ee4 \u4e0b\u9762\u4ee3\u7801\u4f1a\u5c06\u4e3apython3.8\u521b\u5efa\u4e00\u4e2a\u8f6f\u94fe\u63a5 sudo ln -s /usr/bin/python3.8 /usr/bin.python \u8bbe\u7f6e\u522b\u540d(alias) \u00b6 \u5f53\u547d\u4ee4\u5f88\u957f\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u7b80\u77ed\u7684\u522b\u540d\u6765\u4f7f\u7528\u3002 alias act = 'conda activate torch1.7' \u67e5\u770b\u5df2\u4f7f\u7528\u7684\u522b\u540d alias \u53d6\u6d88\u522b\u540d unalias act \u6c38\u4e45\u8bbe\u7f6e\u522b\u540d \u00b6 \u5728 ~/.bash_aliases \u6587\u4ef6\u4e2d\uff08\u6ca1\u6709\u5219\u521b\u5efa\uff09\uff0c\u5199\u5165\u81ea\u5b9a\u4e49\u7684alias\u76f8\u5173\u6307\u4ee4\u3002 \u7f51\u7edc \u00b6 \u9632\u706b\u5899 \u00b6 \u6253\u5f00: sudo ufw enable \u91cd\u542f: sudo ufw reload \u6253\u5f00\u60f3\u8981\u7684\u7aef\u53e3: sudo ufw allow [port] \u67e5\u770b\u672c\u673a\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5: sudo ufw status \u5173\u95ed\u6307\u5b9a\u7aef\u53e3: sudo ufw delete allow enable \u5e38\u7528\u8bbe\u7f6e \u00b6 \u670d\u52a1\u5668ssh\u65e0\u5bc6\u7801\u767b\u5f55 \u00b6 \u5728\u672c\u5730\u7684 ~/.ssh \u76ee\u5f55\u4e0b\uff0c\u67e5\u770b\u662f\u5426\u6709 id_rsa \u548c id_rsa.pub \u4e24\u4e2a\u6587\u4ef6\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u5219\u7528 ssh-keygen -t rsa \u751f\u6210\u3002 \u5c06\u672c\u5730 id_rsa.pub \u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230\u670d\u52a1\u5668 ~/.ssh/authorized_keys \u6587\u4ef6\u7684\u5c3e\u90e8\u3002\uff08\u82e5\u6ca1\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u65b0\u5efa\u3002\uff09 pip\u6362\u6e90 \u00b6 cd ~ mkdir ~/.pip cd ~/.pip sudo vim ~/.pip/pip.conf \u5728pip.conf\u4e2d\u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple/ [install] trusted-host = pypi.tuna.tsinghua.edu.cn \u5b89\u88c5Pytorch \u00b6 pytorch1.7.1 CUDA 11.0 conda install pytorch == 1.7.1 torchvision == 0.8.2 torchaudio == 0.7.2 cudatoolkit = 11.0 - c pytorch \u53c2\u8003\uff1a https://pytorch.org/get-started/previous-versions/ python\u6279\u91cf\u5b89\u88c5\u548cpackage\u5bfc\u51fa \u00b6 \u5bfc\u51fa\uff1a pip freeze > requirements.txt \u5b89\u88c5\uff1a pip install -r requirements.txt \u5378\u8f7d\uff1a pip uninstall -r requirements.txt conda\u8bbe\u7f6e \u00b6 1. \u5b89\u88c5miniconda \u00b6 curl -O https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh sh Miniconda3-py38_4.9.2-Linux-x86_64.sh \u9700\u8981\u914d\u7f6ePython\u7684\u73af\u5883\u53d8\u91cf\uff0c\u7528vim\u6253\u5f00 vim ~/.bashrc \u3002 \u5728\u5c3e\u90e8\u6dfb\u52a0 export PATH=/opt/miniconda3/bin:$PATH \uff0c\u4fdd\u5b58\u9000\u51fa\u3002 source ~/.bashrc 2. \u521b\u5efa\u65b0\u73af\u5883 \u00b6 conda create -n <env_name> python=X.X e.g. conda create -n py36 python=3.6 3. \u62f7\u8d1d\u65e7\u73af\u5883 \u00b6 \u521b\u5efa\u4e00\u4e2a\u65b0\u73af\u5883\uff0c\u62f7\u8d1d\u5df2\u6709\u73af\u5883old\uff1a conda create -n new --clone old 4. conda\u6362\u6e90 \u00b6 https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/ \u5148\u786e\u5b9a ~/.condarc \u6587\u4ef6\u5b58\u5728\uff0c\u751f\u6210\u65b9\u5f0f\uff1a conda config --set show_channel_urls yes linux\u5c06 ~/.condarc \u6539\u4e3a\u4ee5\u4e0b\u7684\u5185\u5bb9\uff1a channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud 5. \u8bbe\u7f6e\u8fdc\u7a0b\u8bbf\u95ee\u7684Jupyter lab \u00b6 \u53c2\u8003\uff1a https://zhuanlan.zhihu.com/p/64524822 \u5c06rm\u6539\u4e3a\u628a\u6587\u4ef6\u653e\u5165\u56de\u6536\u7ad9 \u00b6 alias rm = trash alias rl = 'ls ~/.local/share/Trash/files/' trash (){ del_date = ` date +%Y%m%d%H%M%S ` # \u5faa\u73af\u662f\u56e0\u4e3a\u53ef\u80fdrm\u591a\u4e2a\u6587\u4ef6 for arg in \" $@ \" do # \u8fd9\u91cc\u5c06\u5220\u9664\u65f6\u95f4\u52a0\u5165\u5230\u6587\u4ef6\u540d\u540e\u662f\u56e0\u4e3amv\u547d\u4ee4\u4e0d\u80fd\u8986\u76d6\u975e\u7a7a\u76ee\u5f55\u4ee5\u53ca\u4e0d\u80fd\u4f7f\u7528\u6587\u4ef6\u8986\u76d6\u6587\u4ef6\u5939 # \u52a0\u4e0a\u65f6\u95f4\u5c31\u4e0d\u4f1a\u6709\u540c\u540d\u7684\u6587\u4ef6\u4e86 mv $arg ~/.local/share/Trash/files/ ${ del_date } - ${ arg ##*/ } done } \u518d\u4f7f\u7528 source ~/.bashrc \u8fdb\u884c\u5237\u65b0\u3002 \u7cfb\u7edf\u7ba1\u7406 \u00b6 \u521b\u5efa\u7528\u6237\u548c\u5220\u9664\u7528\u6237 \u00b6 \u53c2\u8003\uff1a https://blog.csdn.net/weixin_44633882/article/details/115104794 Win10\u5b89\u88c5 \u00b6 texlive+VSCode\u914d\u7f6e \u00b6 https://zhuanlan.zhihu.com/p/38178015","title":"\u670d\u52a1\u5668\u624b\u518c"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_1","text":"","title":"\u7cfb\u7edf\u548c\u8f6f\u4ef6\u7248\u672c\u67e5\u770b\u547d\u4ee4"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_2","text":"cat /etc/issue","title":"\u67e5\u770b\u7cfb\u7edf\u7248\u672c"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_3","text":"\u5305\u62ec\u4e3b\u673a\u540d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\uff0c\u5185\u6838\u7248\u672c\uff0c\u7cfb\u7edf\u67b6\u6784\u3002 hostnamectl","title":"\u67e5\u770b\u7cfb\u7edf\u4fe1\u606f"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_4","text":"uname -a","title":"\u67e5\u770b\u5185\u6838\u7248\u672c"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_5","text":"\u67e5\u770bCPU\u4e2a\u6570 cat /proc/cpuinfo | grep \"physical id\" | uniq | wc -l \u67e5\u770bCPU\u6838\u6570 cat /proc/cpuinfo | grep \"cpu cores\" | uniq \u67e5\u770bCPU\u578b\u53f7 cat /proc/cpuinfo | grep 'model name' | uniq \u67e5\u770b\u663e\u5361\u4fe1\u606f lspci | grep -i nvidia","title":"\u67e5\u770b\u8bbe\u5907\u4fe1\u606f"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_6","text":"\u67e5\u770b\u5185\u5b58\u5927\u5c0f: free -g \u67e5\u770b\u786c\u76d8\u5927\u5c0f: df -h \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u5939\u5927\u5c0f: du -sh \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u6bcf\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f: du -h --max-depth=1","title":"\u67e5\u770b\u5185\u5b58\u6216\u786c\u76d8\u7a7a\u95f4"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_7","text":"curl\u6307\u4ee4\uff08\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u5176\u4ed6\u540e\u7f00\u7684\u6587\u4ef6\uff09 curl -O https://www.example.com/foo/bar.html \u53c2\u8003\uff1a https://www.ruanyifeng.com/blog/2019/09/curl-reference.html","title":"\u4e0b\u8f7d\u6570\u636e"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_8","text":"","title":"\u5e38\u7528\u6307\u4ee4"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#nohup","text":"nohup /root/runoob.sh &","title":"nohup"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#screen","text":"","title":"screen"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#attach","text":"\u62a5\u9519\uff1a There is no screen to be resumed matching \u89e3\u51b3\u65b9\u6848\uff1a attach to a not detached screen session screen -xr [sessionName]","title":"\u91cd\u542fattach\u5931\u8d25"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#bash","text":"","title":"Bash\u6307\u4ee4"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_9","text":"ln -s \u6307\u4ee4 \u4e0b\u9762\u4ee3\u7801\u4f1a\u5c06\u4e3apython3.8\u521b\u5efa\u4e00\u4e2a\u8f6f\u94fe\u63a5 sudo ln -s /usr/bin/python3.8 /usr/bin.python","title":"\u521b\u5efa\u8f6f\u94fe\u63a5"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#alias","text":"\u5f53\u547d\u4ee4\u5f88\u957f\u65f6\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u7b80\u77ed\u7684\u522b\u540d\u6765\u4f7f\u7528\u3002 alias act = 'conda activate torch1.7' \u67e5\u770b\u5df2\u4f7f\u7528\u7684\u522b\u540d alias \u53d6\u6d88\u522b\u540d unalias act","title":"\u8bbe\u7f6e\u522b\u540d(alias)"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_10","text":"\u5728 ~/.bash_aliases \u6587\u4ef6\u4e2d\uff08\u6ca1\u6709\u5219\u521b\u5efa\uff09\uff0c\u5199\u5165\u81ea\u5b9a\u4e49\u7684alias\u76f8\u5173\u6307\u4ee4\u3002","title":"\u6c38\u4e45\u8bbe\u7f6e\u522b\u540d"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_11","text":"","title":"\u7f51\u7edc"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_12","text":"\u6253\u5f00: sudo ufw enable \u91cd\u542f: sudo ufw reload \u6253\u5f00\u60f3\u8981\u7684\u7aef\u53e3: sudo ufw allow [port] \u67e5\u770b\u672c\u673a\u7aef\u53e3\u4f7f\u7528\u60c5\u51b5: sudo ufw status \u5173\u95ed\u6307\u5b9a\u7aef\u53e3: sudo ufw delete allow enable","title":"\u9632\u706b\u5899"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_13","text":"","title":"\u5e38\u7528\u8bbe\u7f6e"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#ssh","text":"\u5728\u672c\u5730\u7684 ~/.ssh \u76ee\u5f55\u4e0b\uff0c\u67e5\u770b\u662f\u5426\u6709 id_rsa \u548c id_rsa.pub \u4e24\u4e2a\u6587\u4ef6\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u5219\u7528 ssh-keygen -t rsa \u751f\u6210\u3002 \u5c06\u672c\u5730 id_rsa.pub \u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230\u670d\u52a1\u5668 ~/.ssh/authorized_keys \u6587\u4ef6\u7684\u5c3e\u90e8\u3002\uff08\u82e5\u6ca1\u6709\u8be5\u6587\u4ef6\uff0c\u5219\u65b0\u5efa\u3002\uff09","title":"\u670d\u52a1\u5668ssh\u65e0\u5bc6\u7801\u767b\u5f55"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#pip","text":"cd ~ mkdir ~/.pip cd ~/.pip sudo vim ~/.pip/pip.conf \u5728pip.conf\u4e2d\u5199\u5165\u5982\u4e0b\u5185\u5bb9\uff1a [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple/ [install] trusted-host = pypi.tuna.tsinghua.edu.cn","title":"pip\u6362\u6e90"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#pytorch","text":"pytorch1.7.1 CUDA 11.0 conda install pytorch == 1.7.1 torchvision == 0.8.2 torchaudio == 0.7.2 cudatoolkit = 11.0 - c pytorch \u53c2\u8003\uff1a https://pytorch.org/get-started/previous-versions/","title":"\u5b89\u88c5Pytorch"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#pythonpackage","text":"\u5bfc\u51fa\uff1a pip freeze > requirements.txt \u5b89\u88c5\uff1a pip install -r requirements.txt \u5378\u8f7d\uff1a pip uninstall -r requirements.txt","title":"python\u6279\u91cf\u5b89\u88c5\u548cpackage\u5bfc\u51fa"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#conda","text":"","title":"conda\u8bbe\u7f6e"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#1-miniconda","text":"curl -O https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py38_4.9.2-Linux-x86_64.sh sh Miniconda3-py38_4.9.2-Linux-x86_64.sh \u9700\u8981\u914d\u7f6ePython\u7684\u73af\u5883\u53d8\u91cf\uff0c\u7528vim\u6253\u5f00 vim ~/.bashrc \u3002 \u5728\u5c3e\u90e8\u6dfb\u52a0 export PATH=/opt/miniconda3/bin:$PATH \uff0c\u4fdd\u5b58\u9000\u51fa\u3002 source ~/.bashrc","title":"1. \u5b89\u88c5miniconda"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#2","text":"conda create -n <env_name> python=X.X e.g. conda create -n py36 python=3.6","title":"2. \u521b\u5efa\u65b0\u73af\u5883"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#3","text":"\u521b\u5efa\u4e00\u4e2a\u65b0\u73af\u5883\uff0c\u62f7\u8d1d\u5df2\u6709\u73af\u5883old\uff1a conda create -n new --clone old","title":"3. \u62f7\u8d1d\u65e7\u73af\u5883"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#4-conda","text":"https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/ \u5148\u786e\u5b9a ~/.condarc \u6587\u4ef6\u5b58\u5728\uff0c\u751f\u6210\u65b9\u5f0f\uff1a conda config --set show_channel_urls yes linux\u5c06 ~/.condarc \u6539\u4e3a\u4ee5\u4e0b\u7684\u5185\u5bb9\uff1a channels: - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud","title":"4. conda\u6362\u6e90"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#5-jupyter-lab","text":"\u53c2\u8003\uff1a https://zhuanlan.zhihu.com/p/64524822","title":"5. \u8bbe\u7f6e\u8fdc\u7a0b\u8bbf\u95ee\u7684Jupyter lab"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#rm","text":"alias rm = trash alias rl = 'ls ~/.local/share/Trash/files/' trash (){ del_date = ` date +%Y%m%d%H%M%S ` # \u5faa\u73af\u662f\u56e0\u4e3a\u53ef\u80fdrm\u591a\u4e2a\u6587\u4ef6 for arg in \" $@ \" do # \u8fd9\u91cc\u5c06\u5220\u9664\u65f6\u95f4\u52a0\u5165\u5230\u6587\u4ef6\u540d\u540e\u662f\u56e0\u4e3amv\u547d\u4ee4\u4e0d\u80fd\u8986\u76d6\u975e\u7a7a\u76ee\u5f55\u4ee5\u53ca\u4e0d\u80fd\u4f7f\u7528\u6587\u4ef6\u8986\u76d6\u6587\u4ef6\u5939 # \u52a0\u4e0a\u65f6\u95f4\u5c31\u4e0d\u4f1a\u6709\u540c\u540d\u7684\u6587\u4ef6\u4e86 mv $arg ~/.local/share/Trash/files/ ${ del_date } - ${ arg ##*/ } done } \u518d\u4f7f\u7528 source ~/.bashrc \u8fdb\u884c\u5237\u65b0\u3002","title":"\u5c06rm\u6539\u4e3a\u628a\u6587\u4ef6\u653e\u5165\u56de\u6536\u7ad9"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_14","text":"","title":"\u7cfb\u7edf\u7ba1\u7406"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#_15","text":"\u53c2\u8003\uff1a https://blog.csdn.net/weixin_44633882/article/details/115104794","title":"\u521b\u5efa\u7528\u6237\u548c\u5220\u9664\u7528\u6237"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#win10","text":"","title":"Win10\u5b89\u88c5"},{"location":"%E5%AF%BC%E8%88%AA/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%8B%E5%86%8C/#texlivevscode","text":"https://zhuanlan.zhihu.com/p/38178015","title":"texlive+VSCode\u914d\u7f6e"},{"location":"%E5%AF%BC%E8%88%AA/%E7%BC%96%E8%BE%91%E6%8A%80%E5%B7%A7/","text":"\u95ee\u9898 \u00b6 \u95ee\u98981: \u5728\u4e3b\u9898 rtd-dropdown (\u9700\u5b89\u88c5 mkdocs-rtd-dropdown \u5305)\u73af\u5883\u4e0b\uff0c\u65e0\u6cd5\u8bc6\u522b\u884c\u95f4\u4ee3\u7801\u5757\uff0c\u7f29\u653e\u529f\u80fd\u548c\u6307\u5b9a\u7f16\u7a0b\u8bed\u8a00\u529f\u80fd\u90fd\u5931\u6548\u3002 - \u89e3\u51b3\u65b9\u6848\uff1a\u5207\u6362\u4e3a material \u4e3b\u9898(\u9700\u5b89\u88c5 mkdocs-material \u5305) \u95ee\u98982\uff1a\u591a\u7ea7\u7f29\u8fdb\u65e0\u6cd5\u89e3\u6790 \u4ee3\u7801\u5757 \u00b6 \u5728 material \u4e3b\u9898(\u9700\u5b89\u88c5 mkdocs-material \u5305)\u4e0b\u80fd\u6b63\u5e38\u4f7f\u7528\u3002\u4f46\u6ca1\u6709\u6307\u5b9a\u7f16\u7a0b\u8bed\u8a00\u529f\u80fd\u3002 \u4ee3\u7801\u9ad8\u4eae \u00b6 \u5728 mkdocs.yml \u4e2d markdown_extensions \u90e8\u5206\u6dfb\u52a0\uff1a - codehilite: guess_lang: false \u6570\u5b66\u516c\u5f0f \u00b6 \u591a\u884c\u516c\u5f0f \u00b6 \u9ed8\u8ba4\u4e0d\u4f7f\u7528\u7f16\u53f7 $$ \\begin {aligned} 1 & = 2 \\\\ 3 & = 4 \\end {aligned} $$ \u9ed8\u8ba4\u7f16\u53f7 \u6539\u4e3a align","title":"\u7f16\u8f91\u6280\u5de7"},{"location":"%E5%AF%BC%E8%88%AA/%E7%BC%96%E8%BE%91%E6%8A%80%E5%B7%A7/#_1","text":"\u95ee\u98981: \u5728\u4e3b\u9898 rtd-dropdown (\u9700\u5b89\u88c5 mkdocs-rtd-dropdown \u5305)\u73af\u5883\u4e0b\uff0c\u65e0\u6cd5\u8bc6\u522b\u884c\u95f4\u4ee3\u7801\u5757\uff0c\u7f29\u653e\u529f\u80fd\u548c\u6307\u5b9a\u7f16\u7a0b\u8bed\u8a00\u529f\u80fd\u90fd\u5931\u6548\u3002 - \u89e3\u51b3\u65b9\u6848\uff1a\u5207\u6362\u4e3a material \u4e3b\u9898(\u9700\u5b89\u88c5 mkdocs-material \u5305) \u95ee\u98982\uff1a\u591a\u7ea7\u7f29\u8fdb\u65e0\u6cd5\u89e3\u6790","title":"\u95ee\u9898"},{"location":"%E5%AF%BC%E8%88%AA/%E7%BC%96%E8%BE%91%E6%8A%80%E5%B7%A7/#_2","text":"\u5728 material \u4e3b\u9898(\u9700\u5b89\u88c5 mkdocs-material \u5305)\u4e0b\u80fd\u6b63\u5e38\u4f7f\u7528\u3002\u4f46\u6ca1\u6709\u6307\u5b9a\u7f16\u7a0b\u8bed\u8a00\u529f\u80fd\u3002","title":"\u4ee3\u7801\u5757"},{"location":"%E5%AF%BC%E8%88%AA/%E7%BC%96%E8%BE%91%E6%8A%80%E5%B7%A7/#_3","text":"\u5728 mkdocs.yml \u4e2d markdown_extensions \u90e8\u5206\u6dfb\u52a0\uff1a - codehilite: guess_lang: false","title":"\u4ee3\u7801\u9ad8\u4eae"},{"location":"%E5%AF%BC%E8%88%AA/%E7%BC%96%E8%BE%91%E6%8A%80%E5%B7%A7/#_4","text":"","title":"\u6570\u5b66\u516c\u5f0f"},{"location":"%E5%AF%BC%E8%88%AA/%E7%BC%96%E8%BE%91%E6%8A%80%E5%B7%A7/#_5","text":"\u9ed8\u8ba4\u4e0d\u4f7f\u7528\u7f16\u53f7 $$ \\begin {aligned} 1 & = 2 \\\\ 3 & = 4 \\end {aligned} $$ \u9ed8\u8ba4\u7f16\u53f7 \u6539\u4e3a align","title":"\u591a\u884c\u516c\u5f0f"},{"location":"%E5%AF%BC%E8%88%AA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%A6%82%E5%BF%B5%E5%9F%BA%E7%A1%80/","text":"\u7b97\u6cd5\u590d\u6742\u5ea6 \u00b6 \u0398\uff0c\u8bfb\u97f3\uff1abig-Theta\uff1b\u65e2\u662f\u786e\u754c/\u4e0a\u754c\u4e5f\u662f\u4e0b\u754c(tight)\uff0c\u7b49\u4e8e\u7684\u610f\u601d\u3002 \u039f\uff0c\u8bfb\u97f3\uff1abig-O\uff1b\u8868\u793a\u4e0a\u754c(tightness unknown)\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u7684\u610f\u601d\u3002 \u03bf\uff0c\u8bfb\u97f3\uff1asmall-O\uff1b\u8868\u793a\u4e0a\u754c(not tight)\uff0c\u5c0f\u4e8e\u7684\u610f\u601d\u3002 \u03a9\uff0c\u8bfb\u97f3\uff1abig-Omega\uff1b\u8868\u793a\u4e0b\u754c(tightness unknown)\uff0c\u5927\u4e8e\u7b49\u4e8e\u7684\u610f\u601d\u3002 \u03c9\uff0c\u8bfb\u97f3\uff1asmall-Omega\uff1b\u8868\u793a\u4e0b\u754c(not tight)\uff0c\u5927\u4e8e\u7684\u610f\u601d\u3002","title":"\u8ba1\u7b97\u673a\u624b\u518c"},{"location":"%E5%AF%BC%E8%88%AA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%A6%82%E5%BF%B5%E5%9F%BA%E7%A1%80/#_1","text":"\u0398\uff0c\u8bfb\u97f3\uff1abig-Theta\uff1b\u65e2\u662f\u786e\u754c/\u4e0a\u754c\u4e5f\u662f\u4e0b\u754c(tight)\uff0c\u7b49\u4e8e\u7684\u610f\u601d\u3002 \u039f\uff0c\u8bfb\u97f3\uff1abig-O\uff1b\u8868\u793a\u4e0a\u754c(tightness unknown)\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u7684\u610f\u601d\u3002 \u03bf\uff0c\u8bfb\u97f3\uff1asmall-O\uff1b\u8868\u793a\u4e0a\u754c(not tight)\uff0c\u5c0f\u4e8e\u7684\u610f\u601d\u3002 \u03a9\uff0c\u8bfb\u97f3\uff1abig-Omega\uff1b\u8868\u793a\u4e0b\u754c(tightness unknown)\uff0c\u5927\u4e8e\u7b49\u4e8e\u7684\u610f\u601d\u3002 \u03c9\uff0c\u8bfb\u97f3\uff1asmall-Omega\uff1b\u8868\u793a\u4e0b\u754c(not tight)\uff0c\u5927\u4e8e\u7684\u610f\u601d\u3002","title":"\u7b97\u6cd5\u590d\u6742\u5ea6"},{"location":"%E7%BC%96%E7%A8%8B/Python/","text":"Pyhon\u6280\u5de7 \u00b6 Python\u7684\u7c7b\u6216\u51fd\u6570\u662f\u81ea\u5e26\u4e00\u4e9b\u5c5e\u6027\u7684\u3002\u4f8b\u5982\uff1a\u51fd\u6570\u540d\u6216\u7c7b\u540d\uff0c\u53ef\u901a\u8fc7 __name__ \u6216 getattr(function,'__name__) \u5f97\u5230\u3002 \u5047\u8bbe\u6709\u4e24\u4e2a\u53d8\u91cf Q_table , Z_table \u662f\u5927\u5c0f\u76f8\u540c\u7684ndarray\u5bf9\u8c61\uff0c\u4e0d\u8981\u505a Q_table = Q_table + 5 * Z_table \uff0c\u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684ndarray\u5bf9\u8c61\uff0c\u8d4b\u503c\u7ed9 Q_table . \u5224\u65ad\u6d6e\u70b9\u6570\u76f8\u7b49 \u00b6 # math math . isclose ( a , b , rel_tol = 1e-5 ) # numpy \u4e24\u4e2andarray\u4e2d\u7684\u5143\u7d20 np . isclose ( a , b ) \u4f7f\u7528\u6982\u7387\u5206\u5e03\u76f8\u5173\u7684\u51fd\u6570 \u00b6 scipy.stats.binom https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.binom.html Prob 140: http://prob140.org/sp17/textbook/ \u5c06ipynb\u6587\u4ef6\u8f6c\u4e3apy\u6587\u4ef6 \u00b6 \u5728\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528 jupyter nbconvert --to script XX.ipynb pip\u4f9d\u8d56requirements.txt \u00b6 \u5bfc\u51fa\u73af\u5883\uff1a pip freeze > requirements.txt \u5bfc\u5165\u73af\u5883\uff1a pip install -r requirements.txt Python\u5bf9\u7cfb\u7edf\u64cd\u4f5c \u00b6 \u83b7\u53d6\u547d\u4ee4\u884c\u53c2\u6570 \u00b6 import sys print ( sys . argv [ 1 ]) os\u64cd\u4f5c \u00b6 \u904d\u5386\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u6216\u6587\u4ef6\u5939 \u00b6 os.listdir(path) \uff1a\u53ea\u80fd\u67e5\u627e\u4e00\u5c42\u3002 # \u83b7\u53d6\u76ee\u5f55\u4e0b**\u4e00\u5c42**\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u3002 dir_or_files = os.listdir(root_path) os.walk(path) for root , dirs , files in os . walk ( r \"D:\\test\" ): for file in files : #\u83b7\u53d6\u6587\u4ef6\u6240\u5c5e\u76ee\u5f55 print ( root ) #\u83b7\u53d6\u6587\u4ef6\u8def\u5f84 print ( os . path . join ( root , file )) for dir in dirs : #\u83b7\u53d6\u76ee\u5f55\u7684\u540d\u79f0 print ( dir ) #\u83b7\u53d6\u76ee\u5f55\u7684\u8def\u5f84 print ( os . path . join ( root , dir )) pickle\u4fdd\u5b58\u548c\u52a0\u8f7d \u00b6 import pickle def save_obj ( obj , path = \"temp.pkl\" ): with open ( path , 'wb' ) as f : pickle . dump ( obj , f , pickle . HIGHEST_PROTOCOL ) def load_obj ( path ): with open ( path , 'rb' ) as f : return pickle . load ( f ) json\u4fdd\u5b58\u548c\u52a0\u8f7d \u00b6 import json def save_json ( save_path , data ): assert save_path . split ( '.' )[ - 1 ] == 'json' with open ( save_path , 'w' ) as file : json . dump ( data , file ) def load_json ( file_path ): assert file_path . split ( '.' )[ - 1 ] == 'json' with open ( file_path , 'r' ) as file : data = json . load ( file ) return data Python\u5b57\u7b26\u4e32 \u00b6 Python\u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u00b6 \u6807\u51c6\u683c\u5f0f \u00b6 format_spec :: = [[ fill ] align ][ sign ][ # ][ 0 ][ width ][ grouping_option ][ . precision ][ type ] fill :: = < any character > align :: = \"<\" | \">\" | \"=\" | \"^\" sign :: = \"+\" | \"-\" | \" \" width :: = digit + grouping_option :: = \"_\" | \",\" precision :: = digit + type :: = \"b\" | \"c\" | \"d\" | \"e\" | \"E\" | \"f\" | \"F\" | \"g\" | \"G\" | \"n\" | \"o\" | \"s\" | \"x\" | \"X\" | \"%\" \u53c2\u6570\u89e3\u91ca\uff1a sign : + \u8868\u793a\u6b63\u6570\u524d\u6709+\u53f7\u3001\u8d1f\u6570\u524d\u6709-\u53f7\uff0c - \u8868\u793a\u8d1f\u6570\u524d\u6709-\u53f7\uff08\u9ed8\u8ba4\uff09\uff0c \u8868\u793a\u6b63\u6570\u7528\u7a7a\u683c\u3001\u8d1f\u6570\u7528-\u53f7\u3002 type : \u5e38\u7528\u7684\u6709 b : \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 c : \u8f6c\u6362int\u6570\u4e3aUnicode\u7f16\u7801 d : \u5341\u8fdb\u5236\u6574\u6570\uff08\u9ed8\u8ba4\uff09 f : \u6d6e\u70b9\u6570 e : \u81ea\u7136\u8ba1\u6570\u6cd5 \u6837\u4f8b \u00b6 \u8f93\u51fa2\u4f4d\u5c0f\u6570\uff08\u81ea\u52a8\u56db\u820d\u4e94\u5165\uff09 \u00b6 >>> \" {:.2f} \" . format ( 12.255 ) '12.26' \u6307\u5b9a\u4f4d\u7f6e \u00b6 \u4f7f\u7528 {0} \u653e\u7f6e\u7b2c0\u4e2a\u53c2\u6570 >>> \" {0} , {2} , {1} \" . format ( \"12\" , \"ad\" , \"[]\" ) '12, [], ad' \u8f93\u51fa\u957f\u5ea6\u4e3a10\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528*\u586b\u5145\u7a7a\u767d\u90e8\u5206\uff0c\u5e76\u8fdb\u884c\u5de6\u5bf9\u9f50 \u00b6 >>> \" {0:*>10} \" . format ( \"12\" ) '********12' \u53c2\u8003\uff1a https://docs.python.org/3/library/string.html#formatstrings Numpy\u6307\u5357 \u00b6 \u5224\u65ad\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u76f8\u540c \u00b6 ( array1 == array2 ) # \u8fd4\u56de\u4e24\u4e2a\u77e9\u9635\u4e2d\u5bf9\u5e94\u5143\u7d20\u662f\u5426\u76f8\u7b49\u7684\u903b\u8f91\u503c ( array1 == array2 ) . all () # \u5f53\u4e24\u4e2a\u77e9\u9635\u6240\u6709\u5bf9\u5e94\u5143\u7d20\u76f8\u7b49\uff0c\u8fd4\u56de\u4e00\u4e2a\u903b\u8f91\u503cTrue ( array1 == array2 ) . any () #\u5f53\u4e24\u4e2a\u77e9\u9635\u6240\u6709\u4efb\u4f55\u4e00\u4e2a\u5bf9\u5e94\u5143\u7d20\u76f8\u7b49\uff0c\u8fd4\u56de\u4e00\u4e2a\u903b\u8f91\u503cTrue Numpy\u6570\u7ec4\u6253\u5370 \u00b6 \u6570\u7ec4\u76f4\u63a5\u6253\u5370\u53ef\u80fd\u5c0f\u6570\u70b9\u4f4d\u6570\u8fc7\u591a\uff0c\u4ea7\u751f\u6362\u884c\u3002 \u53ef\u4f7f\u7528 set_printoption \u51fd\u6570\uff0c\u5c06\u5c0f\u6570\u70b9\u4f4d\u6570\u53ea\u6309\u524d\u4e24\u4f4d\u663e\u793a\u3002\uff08\u5168\u5c40\u4f5c\u7528\uff09 # a is a ndarray. np . set_printoptions ( precision = 2 ) print ( a ) \u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u5b9e\u73b0\u5e7f\u64ad \u00b6 \u4f7f\u7528 np.frompyfunc() \u51fd\u6570\u5c06\u81ea\u5b9a\u4e49\u51fd\u6570\u8f6c\u6362\u4e3a\u53ef\u6267\u884c\u5e7f\u64ad\u7684\u51fd\u6570\u3002 import numpy as np def triangle_wave ( x , c , c0 , hc ): x = x - int ( x ) # \u4e09\u89d2\u6ce2\u7684\u5468\u671f\u4e3a1\uff0c\u56e0\u6b64\u53ea\u53d6 x \u5750\u6807\u7684\u5c0f\u6570\u90e8\u5206\u8fdb\u884c\u8ba1\u7b97 if x >= c : r = 0.0 elif x < c0 : r = x / c0 * hc else : r = ( c - x ) / ( c - c0 ) * hc return r x = np . linspace ( 0 , 2 , 1000 ) y1 = np . array ([ triangle_wave ( t , 0.6 , 0.4 , 1.0 ) for t in x ]) \"\"\" \u901a\u8fc7 frompyfunc()\u53ef\u4ee5\u5c06\u8ba1\u7b97\u5355\u4e2a\u503c\u7684\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u80fd\u5bf9\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u8ba1\u7b97\u7684 ufunc \u51fd\u6570\u3002frompyfunc(func,nin,nout) func \u662f\u8ba1\u7b97\u5355\u4e2a\u5143\u7d20\u7684\u51fd\u6570\uff0cnin \u662f func \u8f93\u5165\u53c2\u6570\u7684\u4e2a\u6570\uff0cnout \u662f func \u8fd4\u56de\u503c\u7684\u4e2a \u6570\u3002 \"\"\" triangle_ufunc1 = np . frompyfunc ( triangle_wave , 4 , 1 ) y2 = triangle_ufunc1 ( x , 0.6 , 0.4 , 1.0 ) # \u7ed3\u679c\u548cy1\u662f\u4e00\u6837\u7684 \u53c2\u8003\uff1a https://blog.csdn.net/u014575047/article/details/81184923 Pandas\u6307\u5357 \u00b6 Pandas Cheat Sheet: https://pandas.pydata.org/Pandas_Cheat_Sheet.pdf \u521b\u5efaDataFrame\u5bf9\u8c61\u6216Numpy\u5bf9\u8c61 \u00b6 DataFrame\u8f6c\u6362\u4e3aNumpy\u5bf9\u8c61 \u8f6c\u6362\u4e3a numpy.ndarray : \u901a\u8fc7 Index/Series/DataFrame.to_numpy() \uff1b \u8fc7\u53bbpython2.7\u652f\u6301 as_matrix() \uff0cpython3\u5df2\u4e0d\u652f\u6301\u3002 \u6570\u636e\u7edf\u8ba1 \u00b6 1. df.describe() : \u67e5\u770b\u6bcf\u5217\u7684mean,sum, %. 2. df[\"column name\"].value_counts() : \u67e5\u770b\u6307\u5b9a\u5217\u6bcf\u4e2a\u503c\u51fa\u73b0\u7684\u9891\u6570\u3002 \u6570\u636e\u6e05\u7406 \u00b6 \u5220\u9664\u65e0\u7528\u6570\u636e \u00b6 \u5220\u9664\u5217\u6570\u636e df.drop(\"column_name\",axis=1) # \u5220\u9664\u67d0\u4e00\u5217 df.drop(column_list,axis=1) # \u5220\u9664\u591a\u5217\uff0ccolumn_list\u4e3a\u5217\u540d\u5b57\u7b26\u4e32\u6570\u7ec4 \u53bb\u9664\u5b58\u5728\u6709NA\u7684\u6570\u636e: df.dropna(how) how=any \uff0c\u6709\u4e00\u4e2aNA\u5219\u6ee1\u8db3\u6761\u4ef6\uff1b how=all \uff0c\u5168\u90e8\u4e3aNA\u5219\u7b26\u5408\u6761\u4ef6\u3002 \u67e5\u770b\u6570\u636e \u00b6 pandas\u4e2d\u8fc7\u53bb\u7248\u672c\u53ef\u4f7f\u7528 ix[] \u901a\u8fc7\u5207\u7247\u6765\u83b7\u53d6\u6570\u636e\uff0c\u4f46\u5f53\u524d\u7248\u672c\u5df2\u5f03\u7528\u3002 \u73b0\u5728\u53ef\u4f7f\u7528 loc[] \u548c iloc[] - loc[] \u662f\u6839\u636eDataFrame\u7684index\u7d22\u5f15\u548c\u5217\u540d\u6765\u8bbf\u95ee\u6570\u636e - iloc[] \u662f\u6839\u636eDataFrame\u8868\u4e2d\u7684\u4f4d\u7f6e\u6765\u8bbf\u95ee\u6570\u636e\u3002\uff08int\u7c7b\u578b\u76f8\u5173\uff09 \u6392\u5e8f\u67e5\u770b \u6839\u636e\u7d22\u5f15\u6392\u5e8f df.sort_index(axis) \uff0c\u6839\u636eB\u5217\u4e2d\u7684\u503c\u6392\u5e8f df.sort_values(by=\"B\") https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html#viewing-data \u7d22\u5f15\u64cd\u4f5c \u00b6 1.\u5f97\u5230\u8868\u4e2d\u6ee1\u8db3\u8981\u6c42\u6570\u636e\u7684\u7d22\u5f15\uff0c\u5e76\u5c06\u5176\u4ece\u6240\u6709\u7d22\u5f15\u4e2d\u53bb\u9664\u3002 train_index = df [ df [ \"watch_label\" ] == i ] . index remain_index = df . index . difference ( train_index ) 2.Index\u7d22\u5f15\u5bf9\u8c61\u7684\u96c6\u5408\u64cd\u4f5c - \u4ea4\u96c6: intersection() - \u5dee\u96c6: difference() - \u5e76\u96c6: union() 3.\u6839\u636e\u7d22\u5f15\u83b7\u5f97\u6570\u636e df . loc [ index ] # \u884c\u4e0a\u6839\u636e\u7d22\u5f15\u83b7\u53d6\u6570\u636e 4.\u5224\u65ad\u7d22\u5f15\u662f\u5426\u6709\u91cd\u590d print ( df . is_unique ) \u884c\u64cd\u4f5c \u00b6 1.\u884c\u91c7\u6837: df.sample(n=80000, replace=False, random_state=2021, axis=0) \u5217\u64cd\u4f5c \u00b6 1. eval \u80fd\u4f7f\u591a\u4e2a\u5217\u8fdb\u884c\u56db\u5219\u8fd0\u7b97\u548c\u903b\u8f91\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ea7\u751f\u4e3a\u65b0\u7684\u5217: df.eval(\"new_col_name = col_A_name or col_B_name\") 2.\u53bb\u9664\u6307\u5b9a\u5217: df.drop(\"is_collect\",axis=1) 3.\u5408\u5e76\u591a\u4e2a\u76f8\u540c\u5217\u7684DataFrame: pd.concat(df_list) 4.\u91cd\u65b0\u8bbe\u7f6e\u5217\u540d df.columns= [\"a\",\"b\",\"c\"] 5.\u4f7f\u7528apply()\u5bf9\u4e00\u5217\u6216\u591a\u5217\u6570\u636e\u5e94\u7528\u51fd\u6570 import pandas as pd def add_one ( x ): # \u5bf9\u4e00\u5217\u7684\u5143\u7d20\u52a01 return x + 1 def add_two ( x ): # \u5c06\u4e24\u5217\u4e2d\u7684\u5143\u7d20\u52a0\u8d77\u6765 return x . A + x . B df = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), index = [ 1 , 2 , 3 ], columns = list ( \"ABCD\" )) df [ \"new1\" ] = df [ \"A\" ] . apply ( add_one ) df_sqrt = df . apply ( np . sqrt ) df [ \"new2\" ] = df . loc [:,[ \"A\" , \"B\" ]] . apply ( add_two , axis = 1 ) \u4fdd\u5b58\u548c\u8bfb\u53d6 \u00b6 1.\u4fdd\u5b58: df.to_csv(\"./history.csv\") 2.\u8bfb\u53d6: df = pd.read_csv(\"a.csv\", delimiter=\",\", index_col=0) \u591a\u8868\u64cd\u4f5c \u00b6 1. merge \u51fd\u6570: df_1 \u548c df_2 \u4e2d\u90fd\u6709 id \u5c5e\u6027\uff0c\u4ee5 df_1 \u4e3a\u4e3b\u8868\uff0c\u5c06 df_2 \u5bf9\u5e94\u7684 id \u7684\u7279\u5f81\u5408\u5e76\u5165 df_1 : df_1 = pd.merge(df_1, df_2, how=\"left\", on=\"id\") \u5173\u4e8e\u8bbe\u5b9a \u00b6 Python/pandas\u4e2d\u7684\u5207\u7247 self . features = raw_data . loc [:, raw_data . columns [ 7 :]] self . features . loc [:, \"a\" ] = ( self . features . loc [:, name ] - stats . loc [ \"min\" , name ]) \u7edf\u8ba1\u64cd\u4f5c\u5e93: scipy \u00b6 \u67e5\u770b\u5217\u8868\u6216\u77e9\u9635\u4e2d\u51fa\u73b0\u6700\u591a\u7684\u5143\u7d20\u4e0e\u5176\u6b21\u6570 \u00b6 a = np . array ([[ 0 , 3 , 2 , 1 , 2 ], [ 3 , 3 , 1 , 3 , 3 ], [ 3 , 2 , 3 , 2 , 3 ], [ 3 , 1 , 3 , 3 , 1 ], [ 3 , 1 , 1 , 1 , 0 ]]) print ( mode ( a , axis = 0 )) # Out[8]: ModeResult(mode=array([[3, 1, 1, 1, 3]]), count=array([[4, 2, 2, 2, 2]]))","title":"Python"},{"location":"%E7%BC%96%E7%A8%8B/Python/#pyhon","text":"Python\u7684\u7c7b\u6216\u51fd\u6570\u662f\u81ea\u5e26\u4e00\u4e9b\u5c5e\u6027\u7684\u3002\u4f8b\u5982\uff1a\u51fd\u6570\u540d\u6216\u7c7b\u540d\uff0c\u53ef\u901a\u8fc7 __name__ \u6216 getattr(function,'__name__) \u5f97\u5230\u3002 \u5047\u8bbe\u6709\u4e24\u4e2a\u53d8\u91cf Q_table , Z_table \u662f\u5927\u5c0f\u76f8\u540c\u7684ndarray\u5bf9\u8c61\uff0c\u4e0d\u8981\u505a Q_table = Q_table + 5 * Z_table \uff0c\u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684ndarray\u5bf9\u8c61\uff0c\u8d4b\u503c\u7ed9 Q_table .","title":"Pyhon\u6280\u5de7"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_1","text":"# math math . isclose ( a , b , rel_tol = 1e-5 ) # numpy \u4e24\u4e2andarray\u4e2d\u7684\u5143\u7d20 np . isclose ( a , b )","title":"\u5224\u65ad\u6d6e\u70b9\u6570\u76f8\u7b49"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_2","text":"scipy.stats.binom https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.binom.html Prob 140: http://prob140.org/sp17/textbook/","title":"\u4f7f\u7528\u6982\u7387\u5206\u5e03\u76f8\u5173\u7684\u51fd\u6570"},{"location":"%E7%BC%96%E7%A8%8B/Python/#ipynbpy","text":"\u5728\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e0b\uff0c\u4f7f\u7528 jupyter nbconvert --to script XX.ipynb","title":"\u5c06ipynb\u6587\u4ef6\u8f6c\u4e3apy\u6587\u4ef6"},{"location":"%E7%BC%96%E7%A8%8B/Python/#piprequirementstxt","text":"\u5bfc\u51fa\u73af\u5883\uff1a pip freeze > requirements.txt \u5bfc\u5165\u73af\u5883\uff1a pip install -r requirements.txt","title":"pip\u4f9d\u8d56requirements.txt"},{"location":"%E7%BC%96%E7%A8%8B/Python/#python","text":"","title":"Python\u5bf9\u7cfb\u7edf\u64cd\u4f5c"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_3","text":"import sys print ( sys . argv [ 1 ])","title":"\u83b7\u53d6\u547d\u4ee4\u884c\u53c2\u6570"},{"location":"%E7%BC%96%E7%A8%8B/Python/#os","text":"","title":"os\u64cd\u4f5c"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_4","text":"os.listdir(path) \uff1a\u53ea\u80fd\u67e5\u627e\u4e00\u5c42\u3002 # \u83b7\u53d6\u76ee\u5f55\u4e0b**\u4e00\u5c42**\u7684\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u3002 dir_or_files = os.listdir(root_path) os.walk(path) for root , dirs , files in os . walk ( r \"D:\\test\" ): for file in files : #\u83b7\u53d6\u6587\u4ef6\u6240\u5c5e\u76ee\u5f55 print ( root ) #\u83b7\u53d6\u6587\u4ef6\u8def\u5f84 print ( os . path . join ( root , file )) for dir in dirs : #\u83b7\u53d6\u76ee\u5f55\u7684\u540d\u79f0 print ( dir ) #\u83b7\u53d6\u76ee\u5f55\u7684\u8def\u5f84 print ( os . path . join ( root , dir ))","title":"\u904d\u5386\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u6216\u6587\u4ef6\u5939"},{"location":"%E7%BC%96%E7%A8%8B/Python/#pickle","text":"import pickle def save_obj ( obj , path = \"temp.pkl\" ): with open ( path , 'wb' ) as f : pickle . dump ( obj , f , pickle . HIGHEST_PROTOCOL ) def load_obj ( path ): with open ( path , 'rb' ) as f : return pickle . load ( f )","title":"pickle\u4fdd\u5b58\u548c\u52a0\u8f7d"},{"location":"%E7%BC%96%E7%A8%8B/Python/#json","text":"import json def save_json ( save_path , data ): assert save_path . split ( '.' )[ - 1 ] == 'json' with open ( save_path , 'w' ) as file : json . dump ( data , file ) def load_json ( file_path ): assert file_path . split ( '.' )[ - 1 ] == 'json' with open ( file_path , 'r' ) as file : data = json . load ( file ) return data","title":"json\u4fdd\u5b58\u548c\u52a0\u8f7d"},{"location":"%E7%BC%96%E7%A8%8B/Python/#python_1","text":"","title":"Python\u5b57\u7b26\u4e32"},{"location":"%E7%BC%96%E7%A8%8B/Python/#python_2","text":"","title":"Python\u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_5","text":"format_spec :: = [[ fill ] align ][ sign ][ # ][ 0 ][ width ][ grouping_option ][ . precision ][ type ] fill :: = < any character > align :: = \"<\" | \">\" | \"=\" | \"^\" sign :: = \"+\" | \"-\" | \" \" width :: = digit + grouping_option :: = \"_\" | \",\" precision :: = digit + type :: = \"b\" | \"c\" | \"d\" | \"e\" | \"E\" | \"f\" | \"F\" | \"g\" | \"G\" | \"n\" | \"o\" | \"s\" | \"x\" | \"X\" | \"%\" \u53c2\u6570\u89e3\u91ca\uff1a sign : + \u8868\u793a\u6b63\u6570\u524d\u6709+\u53f7\u3001\u8d1f\u6570\u524d\u6709-\u53f7\uff0c - \u8868\u793a\u8d1f\u6570\u524d\u6709-\u53f7\uff08\u9ed8\u8ba4\uff09\uff0c \u8868\u793a\u6b63\u6570\u7528\u7a7a\u683c\u3001\u8d1f\u6570\u7528-\u53f7\u3002 type : \u5e38\u7528\u7684\u6709 b : \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 c : \u8f6c\u6362int\u6570\u4e3aUnicode\u7f16\u7801 d : \u5341\u8fdb\u5236\u6574\u6570\uff08\u9ed8\u8ba4\uff09 f : \u6d6e\u70b9\u6570 e : \u81ea\u7136\u8ba1\u6570\u6cd5","title":"\u6807\u51c6\u683c\u5f0f"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_6","text":"","title":"\u6837\u4f8b"},{"location":"%E7%BC%96%E7%A8%8B/Python/#2","text":">>> \" {:.2f} \" . format ( 12.255 ) '12.26'","title":"\u8f93\u51fa2\u4f4d\u5c0f\u6570\uff08\u81ea\u52a8\u56db\u820d\u4e94\u5165\uff09"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_7","text":"\u4f7f\u7528 {0} \u653e\u7f6e\u7b2c0\u4e2a\u53c2\u6570 >>> \" {0} , {2} , {1} \" . format ( \"12\" , \"ad\" , \"[]\" ) '12, [], ad'","title":"\u6307\u5b9a\u4f4d\u7f6e"},{"location":"%E7%BC%96%E7%A8%8B/Python/#10","text":">>> \" {0:*>10} \" . format ( \"12\" ) '********12' \u53c2\u8003\uff1a https://docs.python.org/3/library/string.html#formatstrings","title":"\u8f93\u51fa\u957f\u5ea6\u4e3a10\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528*\u586b\u5145\u7a7a\u767d\u90e8\u5206\uff0c\u5e76\u8fdb\u884c\u5de6\u5bf9\u9f50"},{"location":"%E7%BC%96%E7%A8%8B/Python/#numpy","text":"","title":"Numpy\u6307\u5357"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_8","text":"( array1 == array2 ) # \u8fd4\u56de\u4e24\u4e2a\u77e9\u9635\u4e2d\u5bf9\u5e94\u5143\u7d20\u662f\u5426\u76f8\u7b49\u7684\u903b\u8f91\u503c ( array1 == array2 ) . all () # \u5f53\u4e24\u4e2a\u77e9\u9635\u6240\u6709\u5bf9\u5e94\u5143\u7d20\u76f8\u7b49\uff0c\u8fd4\u56de\u4e00\u4e2a\u903b\u8f91\u503cTrue ( array1 == array2 ) . any () #\u5f53\u4e24\u4e2a\u77e9\u9635\u6240\u6709\u4efb\u4f55\u4e00\u4e2a\u5bf9\u5e94\u5143\u7d20\u76f8\u7b49\uff0c\u8fd4\u56de\u4e00\u4e2a\u903b\u8f91\u503cTrue","title":"\u5224\u65ad\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u76f8\u540c"},{"location":"%E7%BC%96%E7%A8%8B/Python/#numpy_1","text":"\u6570\u7ec4\u76f4\u63a5\u6253\u5370\u53ef\u80fd\u5c0f\u6570\u70b9\u4f4d\u6570\u8fc7\u591a\uff0c\u4ea7\u751f\u6362\u884c\u3002 \u53ef\u4f7f\u7528 set_printoption \u51fd\u6570\uff0c\u5c06\u5c0f\u6570\u70b9\u4f4d\u6570\u53ea\u6309\u524d\u4e24\u4f4d\u663e\u793a\u3002\uff08\u5168\u5c40\u4f5c\u7528\uff09 # a is a ndarray. np . set_printoptions ( precision = 2 ) print ( a )","title":"Numpy\u6570\u7ec4\u6253\u5370"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_9","text":"\u4f7f\u7528 np.frompyfunc() \u51fd\u6570\u5c06\u81ea\u5b9a\u4e49\u51fd\u6570\u8f6c\u6362\u4e3a\u53ef\u6267\u884c\u5e7f\u64ad\u7684\u51fd\u6570\u3002 import numpy as np def triangle_wave ( x , c , c0 , hc ): x = x - int ( x ) # \u4e09\u89d2\u6ce2\u7684\u5468\u671f\u4e3a1\uff0c\u56e0\u6b64\u53ea\u53d6 x \u5750\u6807\u7684\u5c0f\u6570\u90e8\u5206\u8fdb\u884c\u8ba1\u7b97 if x >= c : r = 0.0 elif x < c0 : r = x / c0 * hc else : r = ( c - x ) / ( c - c0 ) * hc return r x = np . linspace ( 0 , 2 , 1000 ) y1 = np . array ([ triangle_wave ( t , 0.6 , 0.4 , 1.0 ) for t in x ]) \"\"\" \u901a\u8fc7 frompyfunc()\u53ef\u4ee5\u5c06\u8ba1\u7b97\u5355\u4e2a\u503c\u7684\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u4e2a\u80fd\u5bf9\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u8ba1\u7b97\u7684 ufunc \u51fd\u6570\u3002frompyfunc(func,nin,nout) func \u662f\u8ba1\u7b97\u5355\u4e2a\u5143\u7d20\u7684\u51fd\u6570\uff0cnin \u662f func \u8f93\u5165\u53c2\u6570\u7684\u4e2a\u6570\uff0cnout \u662f func \u8fd4\u56de\u503c\u7684\u4e2a \u6570\u3002 \"\"\" triangle_ufunc1 = np . frompyfunc ( triangle_wave , 4 , 1 ) y2 = triangle_ufunc1 ( x , 0.6 , 0.4 , 1.0 ) # \u7ed3\u679c\u548cy1\u662f\u4e00\u6837\u7684 \u53c2\u8003\uff1a https://blog.csdn.net/u014575047/article/details/81184923","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u5b9e\u73b0\u5e7f\u64ad"},{"location":"%E7%BC%96%E7%A8%8B/Python/#pandas","text":"Pandas Cheat Sheet: https://pandas.pydata.org/Pandas_Cheat_Sheet.pdf","title":"Pandas\u6307\u5357"},{"location":"%E7%BC%96%E7%A8%8B/Python/#dataframenumpy","text":"DataFrame\u8f6c\u6362\u4e3aNumpy\u5bf9\u8c61 \u8f6c\u6362\u4e3a numpy.ndarray : \u901a\u8fc7 Index/Series/DataFrame.to_numpy() \uff1b \u8fc7\u53bbpython2.7\u652f\u6301 as_matrix() \uff0cpython3\u5df2\u4e0d\u652f\u6301\u3002","title":"\u521b\u5efaDataFrame\u5bf9\u8c61\u6216Numpy\u5bf9\u8c61"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_10","text":"1. df.describe() : \u67e5\u770b\u6bcf\u5217\u7684mean,sum, %. 2. df[\"column name\"].value_counts() : \u67e5\u770b\u6307\u5b9a\u5217\u6bcf\u4e2a\u503c\u51fa\u73b0\u7684\u9891\u6570\u3002","title":"\u6570\u636e\u7edf\u8ba1"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_11","text":"","title":"\u6570\u636e\u6e05\u7406"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_12","text":"\u5220\u9664\u5217\u6570\u636e df.drop(\"column_name\",axis=1) # \u5220\u9664\u67d0\u4e00\u5217 df.drop(column_list,axis=1) # \u5220\u9664\u591a\u5217\uff0ccolumn_list\u4e3a\u5217\u540d\u5b57\u7b26\u4e32\u6570\u7ec4 \u53bb\u9664\u5b58\u5728\u6709NA\u7684\u6570\u636e: df.dropna(how) how=any \uff0c\u6709\u4e00\u4e2aNA\u5219\u6ee1\u8db3\u6761\u4ef6\uff1b how=all \uff0c\u5168\u90e8\u4e3aNA\u5219\u7b26\u5408\u6761\u4ef6\u3002","title":"\u5220\u9664\u65e0\u7528\u6570\u636e"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_13","text":"pandas\u4e2d\u8fc7\u53bb\u7248\u672c\u53ef\u4f7f\u7528 ix[] \u901a\u8fc7\u5207\u7247\u6765\u83b7\u53d6\u6570\u636e\uff0c\u4f46\u5f53\u524d\u7248\u672c\u5df2\u5f03\u7528\u3002 \u73b0\u5728\u53ef\u4f7f\u7528 loc[] \u548c iloc[] - loc[] \u662f\u6839\u636eDataFrame\u7684index\u7d22\u5f15\u548c\u5217\u540d\u6765\u8bbf\u95ee\u6570\u636e - iloc[] \u662f\u6839\u636eDataFrame\u8868\u4e2d\u7684\u4f4d\u7f6e\u6765\u8bbf\u95ee\u6570\u636e\u3002\uff08int\u7c7b\u578b\u76f8\u5173\uff09 \u6392\u5e8f\u67e5\u770b \u6839\u636e\u7d22\u5f15\u6392\u5e8f df.sort_index(axis) \uff0c\u6839\u636eB\u5217\u4e2d\u7684\u503c\u6392\u5e8f df.sort_values(by=\"B\") https://pandas.pydata.org/pandas-docs/stable/user_guide/10min.html#viewing-data","title":"\u67e5\u770b\u6570\u636e"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_14","text":"1.\u5f97\u5230\u8868\u4e2d\u6ee1\u8db3\u8981\u6c42\u6570\u636e\u7684\u7d22\u5f15\uff0c\u5e76\u5c06\u5176\u4ece\u6240\u6709\u7d22\u5f15\u4e2d\u53bb\u9664\u3002 train_index = df [ df [ \"watch_label\" ] == i ] . index remain_index = df . index . difference ( train_index ) 2.Index\u7d22\u5f15\u5bf9\u8c61\u7684\u96c6\u5408\u64cd\u4f5c - \u4ea4\u96c6: intersection() - \u5dee\u96c6: difference() - \u5e76\u96c6: union() 3.\u6839\u636e\u7d22\u5f15\u83b7\u5f97\u6570\u636e df . loc [ index ] # \u884c\u4e0a\u6839\u636e\u7d22\u5f15\u83b7\u53d6\u6570\u636e 4.\u5224\u65ad\u7d22\u5f15\u662f\u5426\u6709\u91cd\u590d print ( df . is_unique )","title":"\u7d22\u5f15\u64cd\u4f5c"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_15","text":"1.\u884c\u91c7\u6837: df.sample(n=80000, replace=False, random_state=2021, axis=0)","title":"\u884c\u64cd\u4f5c"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_16","text":"1. eval \u80fd\u4f7f\u591a\u4e2a\u5217\u8fdb\u884c\u56db\u5219\u8fd0\u7b97\u548c\u903b\u8f91\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ea7\u751f\u4e3a\u65b0\u7684\u5217: df.eval(\"new_col_name = col_A_name or col_B_name\") 2.\u53bb\u9664\u6307\u5b9a\u5217: df.drop(\"is_collect\",axis=1) 3.\u5408\u5e76\u591a\u4e2a\u76f8\u540c\u5217\u7684DataFrame: pd.concat(df_list) 4.\u91cd\u65b0\u8bbe\u7f6e\u5217\u540d df.columns= [\"a\",\"b\",\"c\"] 5.\u4f7f\u7528apply()\u5bf9\u4e00\u5217\u6216\u591a\u5217\u6570\u636e\u5e94\u7528\u51fd\u6570 import pandas as pd def add_one ( x ): # \u5bf9\u4e00\u5217\u7684\u5143\u7d20\u52a01 return x + 1 def add_two ( x ): # \u5c06\u4e24\u5217\u4e2d\u7684\u5143\u7d20\u52a0\u8d77\u6765 return x . A + x . B df = pd . DataFrame ( np . arange ( 12 ) . reshape (( 3 , 4 )), index = [ 1 , 2 , 3 ], columns = list ( \"ABCD\" )) df [ \"new1\" ] = df [ \"A\" ] . apply ( add_one ) df_sqrt = df . apply ( np . sqrt ) df [ \"new2\" ] = df . loc [:,[ \"A\" , \"B\" ]] . apply ( add_two , axis = 1 )","title":"\u5217\u64cd\u4f5c"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_17","text":"1.\u4fdd\u5b58: df.to_csv(\"./history.csv\") 2.\u8bfb\u53d6: df = pd.read_csv(\"a.csv\", delimiter=\",\", index_col=0)","title":"\u4fdd\u5b58\u548c\u8bfb\u53d6"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_18","text":"1. merge \u51fd\u6570: df_1 \u548c df_2 \u4e2d\u90fd\u6709 id \u5c5e\u6027\uff0c\u4ee5 df_1 \u4e3a\u4e3b\u8868\uff0c\u5c06 df_2 \u5bf9\u5e94\u7684 id \u7684\u7279\u5f81\u5408\u5e76\u5165 df_1 : df_1 = pd.merge(df_1, df_2, how=\"left\", on=\"id\")","title":"\u591a\u8868\u64cd\u4f5c"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_19","text":"Python/pandas\u4e2d\u7684\u5207\u7247 self . features = raw_data . loc [:, raw_data . columns [ 7 :]] self . features . loc [:, \"a\" ] = ( self . features . loc [:, name ] - stats . loc [ \"min\" , name ])","title":"\u5173\u4e8e\u8bbe\u5b9a"},{"location":"%E7%BC%96%E7%A8%8B/Python/#scipy","text":"","title":"\u7edf\u8ba1\u64cd\u4f5c\u5e93: scipy"},{"location":"%E7%BC%96%E7%A8%8B/Python/#_20","text":"a = np . array ([[ 0 , 3 , 2 , 1 , 2 ], [ 3 , 3 , 1 , 3 , 3 ], [ 3 , 2 , 3 , 2 , 3 ], [ 3 , 1 , 3 , 3 , 1 ], [ 3 , 1 , 1 , 1 , 0 ]]) print ( mode ( a , axis = 0 )) # Out[8]: ModeResult(mode=array([[3, 1, 1, 1, 3]]), count=array([[4, 2, 2, 2, 2]]))","title":"\u67e5\u770b\u5217\u8868\u6216\u77e9\u9635\u4e2d\u51fa\u73b0\u6700\u591a\u7684\u5143\u7d20\u4e0e\u5176\u6b21\u6570"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/","text":"matplotlib\u7ed8\u56fe \u00b6 \u6a21\u677f \u00b6 \u5750\u6807\u70b9\u5f62\u72b6\u67e5\u627e\u8868 \u00b6 \u7ed8\u56fe\u4ee3\u7801: plt.plot(x, y1, lw=1, c='purple', marker='*') 's' : \u65b9\u5757\u72b6 'o' : \u5b9e\u5fc3\u5706 '^' : \u6b63\u4e09\u89d2\u5f62 'v' : \u53cd\u6b63\u4e09\u89d2\u5f62 '+' : \u52a0\u597d '*' : \u661f\u53f7 'x' : x\u53f7 'p' : \u4e94\u89d2\u661f '1' : \u4e09\u811a\u67b6\u6807\u8bb0 '2' : \u4e09\u811a\u67b6\u6807\u8bb0 \u989c\u8272\u67e5\u627e\u8868 \u00b6 \u57fa\u672c\u4ecb\u7ecd \u00b6 Figure\u548cAxes \u00b6 matplotlib\u4e2d\u6700\u57fa\u672c\u7684\u5bf9\u8c61\u662fFigure\u548cAxes. - Axes\uff1a\u5750\u6807\u7cfb\uff0c\u6216\u8005\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed8\u56fe\u7684\u6700\u5c0f\u663e\u793a\u533a\u57df\u3002\u5fc5\u987b\u4f9d\u9644Figure\u5b58\u5728\u3002 - Figure\u5c31\u662f\u4e00\u4e2a\u63d2\u56fe\uff08\u7c7b\u6bd4\uff1a\u4e00\u4e2a\u7a97\u4f53\u6216Jupyter\u4e2d\u7684\u90e8\u4ef6\uff09\uff0c\u4e00\u4e2aFigure\u53ef\u4ee5\u5305\u542b\u81f3\u5c11\u4e00\u4e2aAxes\uff0c\u65e2\u7136\u662f\u63d2\u56fe\uff0c\u5c31\u53ef\u4ee5\u653e\u591a\u4e2a\u6570\u636e\u56fe\u50cf\u3001\u5750\u6807\u7cfb\u8fdb\u884c\u6bd4\u8f83\u3002 \u63a5\u4e0b\u6765\uff0c\u5148\u7b80\u5355\u5730\u521b\u5efa\u4e00\u4e2aFigure\u548c\u4e00\u4e2aAxes\u5bf9\u8c61\uff0c\u5e76\u8fdb\u884c\u7ed8\u56fe\u3002 - python fig, ax = plt.subplots() # Create a figure containing a single axes. ax.plot([1, 2, 3, 4], [1, 4, 2, 3]) # Plot some data on the axes. Figure\u7684\u6784\u6210 \u00b6 \u89e3\u91ca\uff1a - Axes\uff1a\u5750\u6807\u7cfb\uff0c\u5305\u542bAxis\u5750\u6807\u8f74\uff0ctitle\u6807\u9898\uff0clabel\u5750\u6807\u8f74\u7684\u6807\u7b7e\u3002 - Axis\uff1a\u5750\u6807\u8f74\uff0c\u4e8c\u7ef4\u5750\u6807\u7cfb\u6709\u4e8c\u4e2a\u5750\u6807\u8f74\uff0c\u4e09\u7ef4\u5750\u6807\u7cfb\uff08\u4e09\u4e2a\uff09\u3002 \u53ef\u901a\u8fc7 Axes.set_xlim() \u6216 Axes.set_ylim() \u9650\u5236\u663e\u793a\u7684\u8303\u56f4\u3002 \u753b\u4ec0\u4e48\u7c7b\u578b\u7684\u56fe \u00b6 \u70ed\u529b\u56fe \u00b6 import numpy as np import seaborn as sns x = np . random . rand ( 10 , 10 ) sns . heatmap ( x , vmin = 0 , vmax = 1 , center = 0 ) plt . show () \u9700\u6c42 \u00b6 1. \u5728\u540c\u4e00\u4e2aFigure\u4e2d\u4ea7\u751f\u591a\u4e2aAxes \u00b6 fig , axs = plt . subplots ( 2 , 2 ) # a figure with a 2x2 grid of Axes # axs\u662fnumpy.ndarray\u6570\u7ec4\uff0c\u7c7b\u578b\u4e3aobject. axs [ 0 , 1 ] . plot ([ 1 , 2 , 3 , 4 ],[ 2 , 1 , 3 , 4 ]) \u793a\u4f8b\uff1a 2. \u5230\u5e95\u5982\u4f55\u4f7f\u7528plot\u51fd\u6570\uff0cax.plot\u8fd8\u662fplt.plot\uff1f \u00b6 \u5176\u5b9e\u5bf9\u5e94\u7684\u662f\u4e24\u79cd\u4f7f\u7528matplotlib\u7684\u98ce\u683c\u3002 - \u9762\u5411\u5bf9\u8c61\u98ce\u683c\uff1a\u9700\u8981\u663e\u5f0f\u5730\u521b\u5efaFigures\u548cAxes\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u4ed6\u4eec\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 ax.plot \uff08ax\u662fAxes\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5316\uff09 - pyplot\u63a5\u53e3\u98ce\u683c\uff1a\u4f9d\u9760pyplot**\u81ea\u52a8\u5730\u521b\u5efa\u548c\u7ba1\u7406Figures\u548cAxes**\uff0c\u5e76\u4f7f\u7528pyplot\u51fd\u6570\u8fdb\u884c\u7ed8\u56fe\u3002\uff08\u5389\u5bb3\u4e86\u554a\uff09 - \u5bf9\u6bd4\u5982\u4e0b\uff1a - \u9762\u5411\u5bf9\u8c61 x = np . linspace ( 0 , 2 , 100 ) # Note that even in the OO-style, we use `.pyplot.figure` to create the figure. fig , ax = plt . subplots () # Create a figure and an axes. ax . plot ( x , x , label = 'linear' ) # Plot some data on the axes. ax . plot ( x , x ** 2 , label = 'quadratic' ) # Plot more data on the axes... ax . plot ( x , x ** 3 , label = 'cubic' ) # ... and some more. ax . set_xlabel ( 'x label' ) # Add an x-label to the axes. ax . set_ylabel ( 'y label' ) # Add a y-label to the axes. ax . set_title ( \"Simple Plot\" ) # Add a title to the axes. ax . legend () # Add a legend. - pyplot\u63a5\u53e3 x = np . linspace ( 0 , 2 , 100 ) plt . plot ( x , x , label = 'linear' ) # Plot some data on the (implicit) axes. plt . plot ( x , x ** 2 , label = 'quadratic' ) # etc. plt . plot ( x , x ** 3 , label = 'cubic' ) plt . xlabel ( 'x label' ) plt . ylabel ( 'y label' ) plt . title ( \"Simple Plot\" ) plt . legend () \u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5dee\u522b\u3002 3. \u7ed8\u5236\u8868\u683c\u56fe \u00b6 \u8981\u6c42\uff1a\u6bcf\u4e2a\u5750\u6807\u8f74\u4e0a\u7684\u76f8\u90bb\u523b\u5ea6\u56f4\u6210\u7684\u683c\u5b50\u662f\u6b63\u65b9\u5f62\u7684\u3002 import matplotlib.pyplot as plt \"\"\" \u7ed8\u5236\u8868\u683c\u56fe \"\"\" plt . figure ( figsize = ( width , height )) # \u521b\u5efa\u4e00\u4e2aFigure\u5bf9\u8c61 plt . grid () # \u663e\u793a\u8868\u683c plt . xticks ([ i for i in range ( 0 , width + 1 )]) # \u8bbe\u7f6ex\u8f74\u523b\u5ea6 plt . yticks ([ i for i in range ( 1 , height + 1 )]) # \u8bbe\u7f6ey\u8f74\u523b\u5ea6 axes = plt . gca () # \u5f97\u5230\u5f53\u524d\u7684Axes\u5bf9\u8c61 plt . show () 4. \u7ed8\u5236\u7bad\u5934 \u00b6 \u9700\u6c42\uff1a\u753b\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u7684\u7bad\u5934\u3002 import matplotlib.patches as mpatches import matplotlib.pyplot as plt actions = [( 0 , 1 ), ( 0 , - 1 ), ( - 1 , 0 ), ( 1 , 0 )] # \u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3 action = 2 # \u8868\u793a\u7bad\u5934\u671d\u7740\u5de6\u4fa7\uff0c\u957f\u5ea6\u4e3a1. # i,j\u662f\u7bad\u5934\u5c3e\u90e8\u7684\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u3002 tail = ( i + 0.5 , j + 0.5 ) head = ( tail [ 0 ] + actions [ action ][ 0 ] / 2 , tail [ 1 ] + actions [ action ][ 1 ] / 2 ) arrow = mpatches . FancyArrowPatch ( tail , head , mutation_scale = 10 ) axes . add_patch ( arrow ) plt . show () 5. \u7ed8\u5236\u591a\u6761\u66f2\u7ebf\u56fe \u00b6 \u8981\u6c42\uff1a\u4e00\u4e2aFigure\u548c\u4e00\u4e2aAxes\uff0c\u4e00\u4e2a\u5750\u6807\u7cfb\u4e0b\uff0c\u591a\u7ec4\u6570\u636e\u7ed3\u679c\u7684\u5bf9\u6bd4\u3002 //TODO \u5b58\u5728label\u663e\u793a\u7684bug. \"\"\" result: dict\u5b57\u5178\u7c7b\u578b\uff0ckey\u4e3a\u8fd9\u7ec4\u5b9e\u9a8c\u7ed3\u679c\u7684\u6807\u8bc6\u7b26\uff0cvalue\u4e3a\u6570\u636e\u7ed3\u679c\u3002 \"\"\" episode = 100 # x\u8f74\u6570\u636e\u4e2a\u6570 fig , ax = plt . subplots () x = [ i for i in range ( 1 , episode + 1 )] for key , value in result . items (): label = \" {0} _N= {1} \" . format ( key [ 0 ], key [ 1 ]) ax . plot ( x , value , linewidth = 1 , label = label ) ax . set_xlabel ( \"Episodes\" ) ax . set_ylabel ( \"Sum rewards during episode\" ) ax . legend () fig . show () 6. \u9ad8\u5206\u8fa8\u7387\u8f93\u51fa\u56fe\u50cf \u00b6 \u9ad8\u5206\u8fa8\u7387\u663e\u793a\u56fe\u50cf\uff0c\u589e\u5927dpi\u4e5f\u4f1a\u653e\u5927\u6570\u5b57\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u5b57\u88ab\u88c1\u526a\u3002 import matplotlib.pyplot as plt plt.figure(dpi=150) #\u5148\u521b\u5efafigure\uff0c\u518dplot plt.plot(x, y) \u9ad8\u5206\u8fa8\u7387\u4fdd\u5b58\u56fe\u50cf import matplotlib.pyplot as plt plt.savefig(\"High resoltion.png\",dpi=300) 7. \u4e00\u4e2aAx\u663e\u793a\u591a\u4e2a\u51fd\u6570\u7684\u5bf9\u6bd4\u56fe \u00b6 import matplotlib.pyplot as plt from cycler import cycler import matplotlib as mpl # \u7ed8\u52362\u5404\u51fd\u6570\u56fe\u50cf compare_list = [ \"y=x+1\" , \"y=-2x+10\" , ] x = list ( range ( 10 )) data_list = [[ i + 1 for i in x ], [ - 2 * i + 10 for i in x ]] colors = [ '#1f77b4' , '#ff7f0e' , '#2ca02c' , '#d62728' , '#9467bd' , '#8c564b' , '#e377c2' , '#7f7f7f' , '#bcbd22' , '#17becf' , '#1a55FF' ] colors = [ colors [ i ] for i in range ( len ( compare_list ))] mpl . rcParams [ 'axes.prop_cycle' ] = cycler ( markevery = [ 1 , 1 ], color = colors ) fig , ax = plt . subplots () name = \"value\" for i in range ( len ( compare_list )): ax . plot ( data_list [ i ], marker = 'o' , label = str ( compare_list [ i ])) ax . legend ( loc = \"best\" ) ax . set_xlabel ( 'epochs' , fontsize = 12 ) ax . set_ylabel ( name , fontsize = 12 ) ax . set_xticks ( x ) plt . show () \u5b50\u56fe\u4fee\u6539\u5b50\u56fe\u95f4\u7684\u95f4\u8ddd \u00b6 matplotlib . pyplot . subplots_adjust ( left = None , bottom = None , right = None , top = None , wspace = None , hspace = None ) https://matplotlib.org/3.5.1/api/_as_gen/matplotlib.pyplot.subplots_adjust.html Jupyter Notebook\u4e2d\u7684\u95ee\u9898 \u00b6 \u76f4\u63a5\u6253\u5370 fig \uff0c\u5373\u53ef\u663e\u793a\u63d2\u56fe\u3002 \u53c2\u8003 \u00b6 https://matplotlib.org/stable/tutorials/introductory/usage.html#sphx-glr-tutorials-introductory-usage-py","title":"Python\u753b\u56fe"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#matplotlib","text":"","title":"matplotlib\u7ed8\u56fe"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_1","text":"","title":"\u6a21\u677f"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_2","text":"\u7ed8\u56fe\u4ee3\u7801: plt.plot(x, y1, lw=1, c='purple', marker='*') 's' : \u65b9\u5757\u72b6 'o' : \u5b9e\u5fc3\u5706 '^' : \u6b63\u4e09\u89d2\u5f62 'v' : \u53cd\u6b63\u4e09\u89d2\u5f62 '+' : \u52a0\u597d '*' : \u661f\u53f7 'x' : x\u53f7 'p' : \u4e94\u89d2\u661f '1' : \u4e09\u811a\u67b6\u6807\u8bb0 '2' : \u4e09\u811a\u67b6\u6807\u8bb0","title":"\u5750\u6807\u70b9\u5f62\u72b6\u67e5\u627e\u8868"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_3","text":"","title":"\u989c\u8272\u67e5\u627e\u8868"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_4","text":"","title":"\u57fa\u672c\u4ecb\u7ecd"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#figureaxes","text":"matplotlib\u4e2d\u6700\u57fa\u672c\u7684\u5bf9\u8c61\u662fFigure\u548cAxes. - Axes\uff1a\u5750\u6807\u7cfb\uff0c\u6216\u8005\u53ef\u4ee5\u7406\u89e3\u4e3a\u7ed8\u56fe\u7684\u6700\u5c0f\u663e\u793a\u533a\u57df\u3002\u5fc5\u987b\u4f9d\u9644Figure\u5b58\u5728\u3002 - Figure\u5c31\u662f\u4e00\u4e2a\u63d2\u56fe\uff08\u7c7b\u6bd4\uff1a\u4e00\u4e2a\u7a97\u4f53\u6216Jupyter\u4e2d\u7684\u90e8\u4ef6\uff09\uff0c\u4e00\u4e2aFigure\u53ef\u4ee5\u5305\u542b\u81f3\u5c11\u4e00\u4e2aAxes\uff0c\u65e2\u7136\u662f\u63d2\u56fe\uff0c\u5c31\u53ef\u4ee5\u653e\u591a\u4e2a\u6570\u636e\u56fe\u50cf\u3001\u5750\u6807\u7cfb\u8fdb\u884c\u6bd4\u8f83\u3002 \u63a5\u4e0b\u6765\uff0c\u5148\u7b80\u5355\u5730\u521b\u5efa\u4e00\u4e2aFigure\u548c\u4e00\u4e2aAxes\u5bf9\u8c61\uff0c\u5e76\u8fdb\u884c\u7ed8\u56fe\u3002 - python fig, ax = plt.subplots() # Create a figure containing a single axes. ax.plot([1, 2, 3, 4], [1, 4, 2, 3]) # Plot some data on the axes.","title":"Figure\u548cAxes"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#figure","text":"\u89e3\u91ca\uff1a - Axes\uff1a\u5750\u6807\u7cfb\uff0c\u5305\u542bAxis\u5750\u6807\u8f74\uff0ctitle\u6807\u9898\uff0clabel\u5750\u6807\u8f74\u7684\u6807\u7b7e\u3002 - Axis\uff1a\u5750\u6807\u8f74\uff0c\u4e8c\u7ef4\u5750\u6807\u7cfb\u6709\u4e8c\u4e2a\u5750\u6807\u8f74\uff0c\u4e09\u7ef4\u5750\u6807\u7cfb\uff08\u4e09\u4e2a\uff09\u3002 \u53ef\u901a\u8fc7 Axes.set_xlim() \u6216 Axes.set_ylim() \u9650\u5236\u663e\u793a\u7684\u8303\u56f4\u3002","title":"Figure\u7684\u6784\u6210"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_5","text":"","title":"\u753b\u4ec0\u4e48\u7c7b\u578b\u7684\u56fe"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_6","text":"import numpy as np import seaborn as sns x = np . random . rand ( 10 , 10 ) sns . heatmap ( x , vmin = 0 , vmax = 1 , center = 0 ) plt . show ()","title":"\u70ed\u529b\u56fe"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_7","text":"","title":"\u9700\u6c42"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#1-figureaxes","text":"fig , axs = plt . subplots ( 2 , 2 ) # a figure with a 2x2 grid of Axes # axs\u662fnumpy.ndarray\u6570\u7ec4\uff0c\u7c7b\u578b\u4e3aobject. axs [ 0 , 1 ] . plot ([ 1 , 2 , 3 , 4 ],[ 2 , 1 , 3 , 4 ]) \u793a\u4f8b\uff1a","title":"1. \u5728\u540c\u4e00\u4e2aFigure\u4e2d\u4ea7\u751f\u591a\u4e2aAxes"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#2-plotaxplotpltplot","text":"\u5176\u5b9e\u5bf9\u5e94\u7684\u662f\u4e24\u79cd\u4f7f\u7528matplotlib\u7684\u98ce\u683c\u3002 - \u9762\u5411\u5bf9\u8c61\u98ce\u683c\uff1a\u9700\u8981\u663e\u5f0f\u5730\u521b\u5efaFigures\u548cAxes\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u4ed6\u4eec\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 ax.plot \uff08ax\u662fAxes\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u5316\uff09 - pyplot\u63a5\u53e3\u98ce\u683c\uff1a\u4f9d\u9760pyplot**\u81ea\u52a8\u5730\u521b\u5efa\u548c\u7ba1\u7406Figures\u548cAxes**\uff0c\u5e76\u4f7f\u7528pyplot\u51fd\u6570\u8fdb\u884c\u7ed8\u56fe\u3002\uff08\u5389\u5bb3\u4e86\u554a\uff09 - \u5bf9\u6bd4\u5982\u4e0b\uff1a - \u9762\u5411\u5bf9\u8c61 x = np . linspace ( 0 , 2 , 100 ) # Note that even in the OO-style, we use `.pyplot.figure` to create the figure. fig , ax = plt . subplots () # Create a figure and an axes. ax . plot ( x , x , label = 'linear' ) # Plot some data on the axes. ax . plot ( x , x ** 2 , label = 'quadratic' ) # Plot more data on the axes... ax . plot ( x , x ** 3 , label = 'cubic' ) # ... and some more. ax . set_xlabel ( 'x label' ) # Add an x-label to the axes. ax . set_ylabel ( 'y label' ) # Add a y-label to the axes. ax . set_title ( \"Simple Plot\" ) # Add a title to the axes. ax . legend () # Add a legend. - pyplot\u63a5\u53e3 x = np . linspace ( 0 , 2 , 100 ) plt . plot ( x , x , label = 'linear' ) # Plot some data on the (implicit) axes. plt . plot ( x , x ** 2 , label = 'quadratic' ) # etc. plt . plot ( x , x ** 3 , label = 'cubic' ) plt . xlabel ( 'x label' ) plt . ylabel ( 'y label' ) plt . title ( \"Simple Plot\" ) plt . legend () \u51e0\u4e4e\u6ca1\u6709\u4ec0\u4e48\u5dee\u522b\u3002","title":"2. \u5230\u5e95\u5982\u4f55\u4f7f\u7528plot\u51fd\u6570\uff0cax.plot\u8fd8\u662fplt.plot\uff1f"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#3","text":"\u8981\u6c42\uff1a\u6bcf\u4e2a\u5750\u6807\u8f74\u4e0a\u7684\u76f8\u90bb\u523b\u5ea6\u56f4\u6210\u7684\u683c\u5b50\u662f\u6b63\u65b9\u5f62\u7684\u3002 import matplotlib.pyplot as plt \"\"\" \u7ed8\u5236\u8868\u683c\u56fe \"\"\" plt . figure ( figsize = ( width , height )) # \u521b\u5efa\u4e00\u4e2aFigure\u5bf9\u8c61 plt . grid () # \u663e\u793a\u8868\u683c plt . xticks ([ i for i in range ( 0 , width + 1 )]) # \u8bbe\u7f6ex\u8f74\u523b\u5ea6 plt . yticks ([ i for i in range ( 1 , height + 1 )]) # \u8bbe\u7f6ey\u8f74\u523b\u5ea6 axes = plt . gca () # \u5f97\u5230\u5f53\u524d\u7684Axes\u5bf9\u8c61 plt . show ()","title":"3. \u7ed8\u5236\u8868\u683c\u56fe"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#4","text":"\u9700\u6c42\uff1a\u753b\u51fa\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u7684\u7bad\u5934\u3002 import matplotlib.patches as mpatches import matplotlib.pyplot as plt actions = [( 0 , 1 ), ( 0 , - 1 ), ( - 1 , 0 ), ( 1 , 0 )] # \u4e0a\uff0c\u4e0b\uff0c\u5de6\uff0c\u53f3 action = 2 # \u8868\u793a\u7bad\u5934\u671d\u7740\u5de6\u4fa7\uff0c\u957f\u5ea6\u4e3a1. # i,j\u662f\u7bad\u5934\u5c3e\u90e8\u7684\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u3002 tail = ( i + 0.5 , j + 0.5 ) head = ( tail [ 0 ] + actions [ action ][ 0 ] / 2 , tail [ 1 ] + actions [ action ][ 1 ] / 2 ) arrow = mpatches . FancyArrowPatch ( tail , head , mutation_scale = 10 ) axes . add_patch ( arrow ) plt . show ()","title":"4. \u7ed8\u5236\u7bad\u5934"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#5","text":"\u8981\u6c42\uff1a\u4e00\u4e2aFigure\u548c\u4e00\u4e2aAxes\uff0c\u4e00\u4e2a\u5750\u6807\u7cfb\u4e0b\uff0c\u591a\u7ec4\u6570\u636e\u7ed3\u679c\u7684\u5bf9\u6bd4\u3002 //TODO \u5b58\u5728label\u663e\u793a\u7684bug. \"\"\" result: dict\u5b57\u5178\u7c7b\u578b\uff0ckey\u4e3a\u8fd9\u7ec4\u5b9e\u9a8c\u7ed3\u679c\u7684\u6807\u8bc6\u7b26\uff0cvalue\u4e3a\u6570\u636e\u7ed3\u679c\u3002 \"\"\" episode = 100 # x\u8f74\u6570\u636e\u4e2a\u6570 fig , ax = plt . subplots () x = [ i for i in range ( 1 , episode + 1 )] for key , value in result . items (): label = \" {0} _N= {1} \" . format ( key [ 0 ], key [ 1 ]) ax . plot ( x , value , linewidth = 1 , label = label ) ax . set_xlabel ( \"Episodes\" ) ax . set_ylabel ( \"Sum rewards during episode\" ) ax . legend () fig . show ()","title":"5. \u7ed8\u5236\u591a\u6761\u66f2\u7ebf\u56fe"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#6","text":"\u9ad8\u5206\u8fa8\u7387\u663e\u793a\u56fe\u50cf\uff0c\u589e\u5927dpi\u4e5f\u4f1a\u653e\u5927\u6570\u5b57\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u5b57\u88ab\u88c1\u526a\u3002 import matplotlib.pyplot as plt plt.figure(dpi=150) #\u5148\u521b\u5efafigure\uff0c\u518dplot plt.plot(x, y) \u9ad8\u5206\u8fa8\u7387\u4fdd\u5b58\u56fe\u50cf import matplotlib.pyplot as plt plt.savefig(\"High resoltion.png\",dpi=300)","title":"6. \u9ad8\u5206\u8fa8\u7387\u8f93\u51fa\u56fe\u50cf"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#7-ax","text":"import matplotlib.pyplot as plt from cycler import cycler import matplotlib as mpl # \u7ed8\u52362\u5404\u51fd\u6570\u56fe\u50cf compare_list = [ \"y=x+1\" , \"y=-2x+10\" , ] x = list ( range ( 10 )) data_list = [[ i + 1 for i in x ], [ - 2 * i + 10 for i in x ]] colors = [ '#1f77b4' , '#ff7f0e' , '#2ca02c' , '#d62728' , '#9467bd' , '#8c564b' , '#e377c2' , '#7f7f7f' , '#bcbd22' , '#17becf' , '#1a55FF' ] colors = [ colors [ i ] for i in range ( len ( compare_list ))] mpl . rcParams [ 'axes.prop_cycle' ] = cycler ( markevery = [ 1 , 1 ], color = colors ) fig , ax = plt . subplots () name = \"value\" for i in range ( len ( compare_list )): ax . plot ( data_list [ i ], marker = 'o' , label = str ( compare_list [ i ])) ax . legend ( loc = \"best\" ) ax . set_xlabel ( 'epochs' , fontsize = 12 ) ax . set_ylabel ( name , fontsize = 12 ) ax . set_xticks ( x ) plt . show ()","title":"7. \u4e00\u4e2aAx\u663e\u793a\u591a\u4e2a\u51fd\u6570\u7684\u5bf9\u6bd4\u56fe"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_8","text":"matplotlib . pyplot . subplots_adjust ( left = None , bottom = None , right = None , top = None , wspace = None , hspace = None ) https://matplotlib.org/3.5.1/api/_as_gen/matplotlib.pyplot.subplots_adjust.html","title":"\u5b50\u56fe\u4fee\u6539\u5b50\u56fe\u95f4\u7684\u95f4\u8ddd"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#jupyter-notebook","text":"\u76f4\u63a5\u6253\u5370 fig \uff0c\u5373\u53ef\u663e\u793a\u63d2\u56fe\u3002","title":"Jupyter Notebook\u4e2d\u7684\u95ee\u9898"},{"location":"%E7%BC%96%E7%A8%8B/Python%E7%94%BB%E5%9B%BE/#_9","text":"https://matplotlib.org/stable/tutorials/introductory/usage.html#sphx-glr-tutorials-introductory-usage-py","title":"\u53c2\u8003"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/","text":"\u57fa\u7840\u64cd\u4f5c \u00b6 \u5728\u6307\u5b9a\u7ef4\u5ea6\u4e0a\u5c06tensor\u590d\u5236 \u00b6 Tensor.repeat(*sizes) \u6ce8\u610f\u548cnp.repeat\u4e0d\u540c\uff0c \u4f8b\u5982\uff1a x = torch . tensor ([ 1 , 2 , 3 ]) x . repeat ( 4 , 2 ) # tensor([[ 1, 2, 3, 1, 2, 3], # [ 1, 2, 3, 1, 2, 3], # [ 1, 2, 3, 1, 2, 3], # [ 1, 2, 3, 1, 2, 3]]) \u6307\u5b9a\u7ef4\u5ea6\u7528\u8be5\u7ef4\u5ea6\u4e0a\u7684\u7d22\u5f15\u6765\u9009\u62e9\u5143\u7d20 \u00b6 torch.gather(input, dim, index, *, sparse_grad=False, out=None) dim \u8868\u660e\u6211\u4eec\u786e\u5b9a\u4e86\u67d0\u4e2a\u7ef4\u5ea6\uff0c\u7d22\u5f15\u77e9\u9635\u662f\u8be5\u7ef4\u5ea6\u4e0a\u7684\u7d22\u5f15\uff0c\u5176\u4ed6\u7d22\u5f15\u95f4\u662f\u4e0d\u4f1a\u6709\u4ea4\u4e92\u7684\u3002 \u5047\u8bbe\u8f93\u5165\u77e9\u9635\u4e3a2\u7ef4\uff1a - \u6839\u636e dim=0 \u9009\u62e9\u5143\u7d20\uff1a out[i][j] = input[index[i][j]][j] \u5219\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u9ed8\u8ba4\u7684 index \u77e9\u9635\uff0c torch.gather(input,0,index) \u8fd8\u662f\u7b49\u4e8einput. [[ 0 0 0 ], [ 1 1 1 ], [ 2 2 2 ]] t = torch . tensor ([[ 1 , 2 ], [ 3 , 4 ]]) torch . gather ( t , 0 , torch . tensor ([[ 0 , 0 ], [ 1 , 0 ]])) # [[1 2], [3 2]] Pytorch\u4fdd\u5b58\u6a21\u578b\u4e0e\u52a0\u8f7d\u6a21\u578b \u00b6 \u4fdd\u5b58\u66f4\u591a\u7684\u4fe1\u606f torch . save ({ 'epoch' : epochID + 1 , 'state_dict' : model . state_dict (), 'best_loss' : loss }, 'model.pth' ) \u51bb\u7ed3\u6a21\u578b\u90e8\u5206\u53c2\u6570\uff0c\u8bad\u7ec3\u90e8\u5206\u53c2\u6570 \u00b6 for p in self . parameters (): p . requires_grad = False # \u4f18\u5316\u5668 optimizer = optim . Adam ( filter ( lambda p : p . requires_grad , model . parameters ()), lr = 0.001 ) Tensorboard\u6307\u5357 \u00b6 \u4ee3\u7801\u6a21\u677f \u00b6 from torch.utils.tensorboard import SummaryWriter import numpy as np writer = SummaryWriter() for n_iter in range(100): writer.add_scalar('Loss/train', np.random.random(), n_iter) writer.add_scalar('Loss/test', np.random.random(), n_iter) writer.add_scalar('Accuracy/train', np.random.random(), n_iter) writer.add_scalar('Accuracy/test', np.random.random(), n_iter) \u5bf9\u4e8e\u6a21\u578b\u4e00\u6b21\u8bad\u7ec3\u4e2d\u4e00\u4e2aStep\u9700\u8981\u8f93\u51fa\u591a\u4e2a\u7ed3\u679c\uff0c\u53ef\u4ee5\u4f7f\u7528 add_scalars \u542f\u52a8\u670d\u52a1 \u00b6 \u9ed8\u8ba4\u4fdd\u5b58\u76ee\u5f55\u662f runs tensorboard --logdir = runs \u8bbf\u95ee http://localhost:6006/ \u53c2\u8003\uff1a https://pytorch.org/docs/stable/tensorboard.html","title":"Pytorch"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#_1","text":"","title":"\u57fa\u7840\u64cd\u4f5c"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#tensor","text":"Tensor.repeat(*sizes) \u6ce8\u610f\u548cnp.repeat\u4e0d\u540c\uff0c \u4f8b\u5982\uff1a x = torch . tensor ([ 1 , 2 , 3 ]) x . repeat ( 4 , 2 ) # tensor([[ 1, 2, 3, 1, 2, 3], # [ 1, 2, 3, 1, 2, 3], # [ 1, 2, 3, 1, 2, 3], # [ 1, 2, 3, 1, 2, 3]])","title":"\u5728\u6307\u5b9a\u7ef4\u5ea6\u4e0a\u5c06tensor\u590d\u5236"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#_2","text":"torch.gather(input, dim, index, *, sparse_grad=False, out=None) dim \u8868\u660e\u6211\u4eec\u786e\u5b9a\u4e86\u67d0\u4e2a\u7ef4\u5ea6\uff0c\u7d22\u5f15\u77e9\u9635\u662f\u8be5\u7ef4\u5ea6\u4e0a\u7684\u7d22\u5f15\uff0c\u5176\u4ed6\u7d22\u5f15\u95f4\u662f\u4e0d\u4f1a\u6709\u4ea4\u4e92\u7684\u3002 \u5047\u8bbe\u8f93\u5165\u77e9\u9635\u4e3a2\u7ef4\uff1a - \u6839\u636e dim=0 \u9009\u62e9\u5143\u7d20\uff1a out[i][j] = input[index[i][j]][j] \u5219\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u9ed8\u8ba4\u7684 index \u77e9\u9635\uff0c torch.gather(input,0,index) \u8fd8\u662f\u7b49\u4e8einput. [[ 0 0 0 ], [ 1 1 1 ], [ 2 2 2 ]] t = torch . tensor ([[ 1 , 2 ], [ 3 , 4 ]]) torch . gather ( t , 0 , torch . tensor ([[ 0 , 0 ], [ 1 , 0 ]])) # [[1 2], [3 2]]","title":"\u6307\u5b9a\u7ef4\u5ea6\u7528\u8be5\u7ef4\u5ea6\u4e0a\u7684\u7d22\u5f15\u6765\u9009\u62e9\u5143\u7d20"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#pytorch","text":"\u4fdd\u5b58\u66f4\u591a\u7684\u4fe1\u606f torch . save ({ 'epoch' : epochID + 1 , 'state_dict' : model . state_dict (), 'best_loss' : loss }, 'model.pth' )","title":"Pytorch\u4fdd\u5b58\u6a21\u578b\u4e0e\u52a0\u8f7d\u6a21\u578b"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#_3","text":"for p in self . parameters (): p . requires_grad = False # \u4f18\u5316\u5668 optimizer = optim . Adam ( filter ( lambda p : p . requires_grad , model . parameters ()), lr = 0.001 )","title":"\u51bb\u7ed3\u6a21\u578b\u90e8\u5206\u53c2\u6570\uff0c\u8bad\u7ec3\u90e8\u5206\u53c2\u6570"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#tensorboard","text":"","title":"Tensorboard\u6307\u5357"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#_4","text":"from torch.utils.tensorboard import SummaryWriter import numpy as np writer = SummaryWriter() for n_iter in range(100): writer.add_scalar('Loss/train', np.random.random(), n_iter) writer.add_scalar('Loss/test', np.random.random(), n_iter) writer.add_scalar('Accuracy/train', np.random.random(), n_iter) writer.add_scalar('Accuracy/test', np.random.random(), n_iter) \u5bf9\u4e8e\u6a21\u578b\u4e00\u6b21\u8bad\u7ec3\u4e2d\u4e00\u4e2aStep\u9700\u8981\u8f93\u51fa\u591a\u4e2a\u7ed3\u679c\uff0c\u53ef\u4ee5\u4f7f\u7528 add_scalars","title":"\u4ee3\u7801\u6a21\u677f"},{"location":"%E7%BC%96%E7%A8%8B/Pytorch/#_5","text":"\u9ed8\u8ba4\u4fdd\u5b58\u76ee\u5f55\u662f runs tensorboard --logdir = runs \u8bbf\u95ee http://localhost:6006/ \u53c2\u8003\uff1a https://pytorch.org/docs/stable/tensorboard.html","title":"\u542f\u52a8\u670d\u52a1"},{"location":"%E7%BC%96%E7%A8%8B/shell/","text":"\u57fa\u7840\u8bed\u6cd5 \u00b6 http://c.biancheng.net/view/743.html https://www.runoob.com/linux/linux-shell.html \u53d8\u91cf\u4f7f\u7528 \u00b6 \u5b9a\u4e49\u53d8\u91cf - var=1 - \u6ce8\u610f\uff1a = \u5468\u56f4\u4e0d\u80fd\u6709\u7a7a\u683c\u3002 - \u5b57\u7b26\u4e32\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7528\u6cd5\u4e0d\u540c\uff0c\u901a\u5e38\u4f7f\u7528\u53cc\u5f15\u53f7 \u4f7f\u7528\u53d8\u91cf var = 1 echo $var echo ${ var } # \u63a8\u8350\u4f7f\u7528\u53d8\u91cf\u7684\u65f6\u5019\u52a0\u4e0a\u82b1\u62ec\u53f7{} \u4fee\u6539\u53d8\u91cf\u7684\u503c var = 1 var = 2 # \u4e0d\u9700\u8981\u52a0$ \u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7684\u533a\u522b - \u5355\u5f15\u53f7\u4f1a\u5c06\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u4e0d\u89e3\u6790\u76f4\u63a5\u8f93\u51fa\u3002 - \u53cc\u5f15\u53f7\u80fd\u591f\u89e3\u6790\u5b57\u7b26\u4e32\u4e2d\u53d8\u91cf\u548c\u547d\u4ee4\uff0c\u518d\u8f93\u51fa\u3002 \u6570\u7ec4 \u00b6 \u5b9a\u4e49\u6570\u7ec4\uff1a \u6570\u7ec4\u540d=(\u503c1 \u503c2 ... \u503cn) \u8bfb\u53d6\u6570\u7ec4\uff1a ${\u6570\u7ec4\u540d[\u4e0b\u6807]} , @ \u53ef\u4ee5\u83b7\u5f97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\uff1a ${array_name[@]} if\u5224\u65ad\uff08\u6570\u5b57\u6761\u4ef6\u548c\u5b57\u7b26\u4e32\u6761\u4ef6\uff09 \u00b6 \u8bed\u53e5\uff1a if [ $a -lt $i ] then echo \"a < i\" else echo \"a > i\" fi \u6574\u6570\u6bd4\u8f83 |\u7b26\u53f7|\u542b\u4e49|\u505a\u6cd5| | ---- | ---- | ---- | |-eq | \u7b49\u4e8e | if [ \"$a\" -eq \"$b\" ] | |-ne | \u4e0d\u7b49\u4e8e | if [ \"$a\" -ne \"$b\" ] | |-gt | \u5927\u4e8e | if [ \"$a\" -gt \"$b\" ] | |-ge | \u5927\u4e8e\u7b49\u4e8e | if [ \"$a\" -ge \"$b\" ] | |-lt | \u5c0f\u4e8e | if [ \"$a\" -lt \"$b\" ] | |-le | \u5c0f\u4e8e\u7b49\u4e8e | if [ \"$a\" -le \"$b\" ] | |< | \u5c0f\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" < \"$b\")) | |<= | \u5c0f\u4e8e\u7b49\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" <= \"$b\")) | |> | \u5927\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" > \"$b\")) | |>= | \u5927\u4e8e\u7b49\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" >= \"$b\")) | \u5b57\u7b26\u4e32\u6bd4\u8f83 |\u7b26\u53f7|\u542b\u4e49|\u505a\u6cd5| | ---- | ---- | ---- | |= |\u7b49\u4e8e | if [ \"$a\" = \"$b\" ] | |== |\u7b49\u4e8e,\u4e0e=\u7b49\u4ef7 | if [ \"$a\" == \"$b\" ] | \u98de\u884c\u6307\u5357 \u00b6 \u5b57\u7b26\u4e32A\u5728\u5b57\u7b26\u4e32B\u4e2d \u00b6 [[ \"* $A *\" == \" $B \" ]]","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"%E7%BC%96%E7%A8%8B/shell/#_1","text":"http://c.biancheng.net/view/743.html https://www.runoob.com/linux/linux-shell.html","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"%E7%BC%96%E7%A8%8B/shell/#_2","text":"\u5b9a\u4e49\u53d8\u91cf - var=1 - \u6ce8\u610f\uff1a = \u5468\u56f4\u4e0d\u80fd\u6709\u7a7a\u683c\u3002 - \u5b57\u7b26\u4e32\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7528\u6cd5\u4e0d\u540c\uff0c\u901a\u5e38\u4f7f\u7528\u53cc\u5f15\u53f7 \u4f7f\u7528\u53d8\u91cf var = 1 echo $var echo ${ var } # \u63a8\u8350\u4f7f\u7528\u53d8\u91cf\u7684\u65f6\u5019\u52a0\u4e0a\u82b1\u62ec\u53f7{} \u4fee\u6539\u53d8\u91cf\u7684\u503c var = 1 var = 2 # \u4e0d\u9700\u8981\u52a0$ \u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u7684\u533a\u522b - \u5355\u5f15\u53f7\u4f1a\u5c06\u5f15\u53f7\u4e2d\u7684\u5185\u5bb9\u4e0d\u89e3\u6790\u76f4\u63a5\u8f93\u51fa\u3002 - \u53cc\u5f15\u53f7\u80fd\u591f\u89e3\u6790\u5b57\u7b26\u4e32\u4e2d\u53d8\u91cf\u548c\u547d\u4ee4\uff0c\u518d\u8f93\u51fa\u3002","title":"\u53d8\u91cf\u4f7f\u7528"},{"location":"%E7%BC%96%E7%A8%8B/shell/#_3","text":"\u5b9a\u4e49\u6570\u7ec4\uff1a \u6570\u7ec4\u540d=(\u503c1 \u503c2 ... \u503cn) \u8bfb\u53d6\u6570\u7ec4\uff1a ${\u6570\u7ec4\u540d[\u4e0b\u6807]} , @ \u53ef\u4ee5\u83b7\u5f97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\uff1a ${array_name[@]}","title":"\u6570\u7ec4"},{"location":"%E7%BC%96%E7%A8%8B/shell/#if","text":"\u8bed\u53e5\uff1a if [ $a -lt $i ] then echo \"a < i\" else echo \"a > i\" fi \u6574\u6570\u6bd4\u8f83 |\u7b26\u53f7|\u542b\u4e49|\u505a\u6cd5| | ---- | ---- | ---- | |-eq | \u7b49\u4e8e | if [ \"$a\" -eq \"$b\" ] | |-ne | \u4e0d\u7b49\u4e8e | if [ \"$a\" -ne \"$b\" ] | |-gt | \u5927\u4e8e | if [ \"$a\" -gt \"$b\" ] | |-ge | \u5927\u4e8e\u7b49\u4e8e | if [ \"$a\" -ge \"$b\" ] | |-lt | \u5c0f\u4e8e | if [ \"$a\" -lt \"$b\" ] | |-le | \u5c0f\u4e8e\u7b49\u4e8e | if [ \"$a\" -le \"$b\" ] | |< | \u5c0f\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" < \"$b\")) | |<= | \u5c0f\u4e8e\u7b49\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" <= \"$b\")) | |> | \u5927\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" > \"$b\")) | |>= | \u5927\u4e8e\u7b49\u4e8e(\u9700\u8981\u53cc\u62ec\u53f7) | ((\"$a\" >= \"$b\")) | \u5b57\u7b26\u4e32\u6bd4\u8f83 |\u7b26\u53f7|\u542b\u4e49|\u505a\u6cd5| | ---- | ---- | ---- | |= |\u7b49\u4e8e | if [ \"$a\" = \"$b\" ] | |== |\u7b49\u4e8e,\u4e0e=\u7b49\u4ef7 | if [ \"$a\" == \"$b\" ] |","title":"if\u5224\u65ad\uff08\u6570\u5b57\u6761\u4ef6\u548c\u5b57\u7b26\u4e32\u6761\u4ef6\uff09"},{"location":"%E7%BC%96%E7%A8%8B/shell/#_4","text":"","title":"\u98de\u884c\u6307\u5357"},{"location":"%E7%BC%96%E7%A8%8B/shell/#ab","text":"[[ \"* $A *\" == \" $B \" ]]","title":"\u5b57\u7b26\u4e32A\u5728\u5b57\u7b26\u4e32B\u4e2d"}]}